// generated by 'github.com/sacloud/libsacloud/internal/tools/gen-api-models'; DO NOT EDIT

package sacloud

import (
	"time"

	"github.com/sacloud/libsacloud-v2/pkg/mapconv"
	"github.com/sacloud/libsacloud-v2/sacloud/enums"
	"github.com/sacloud/libsacloud-v2/sacloud/naked"
	"gopkg.in/go-playground/validator.v9"
)

/*************************************************
* CDROM
*************************************************/

// CDROM represents API parameter/response structure
type CDROM struct {
	ID           int64
	Name         string `validate:"required"`
	Description  string
	DisplayOrder int
	Tags         []string
	Availability enums.EAvailability
	Scope        enums.EScope
	StorageClass string
	Storage      *naked.Storage `json:",omitempty"`
	Icon         *naked.Icon    `json:",omitempty"`
	CreatedAt    *time.Time
	ModifiedAt   *time.Time
}

// Validate validates by field tags
func (o *CDROM) Validate() error {
	return validator.New().Struct(o)
}

// GetID returns value of ID
func (o *CDROM) GetID() int64 {
	return o.ID
}

// SetID sets value to ID
func (o *CDROM) SetID(v int64) {
	o.ID = v
}

// GetStringID gets value to StringID
func (o *CDROM) GetStringID() string {
	return getStringID(o)
}

// SetStringID sets value to StringID
func (o *CDROM) SetStringID(v string) {
	setStringID(o, v)
}

// GetName returns value of Name
func (o *CDROM) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *CDROM) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *CDROM) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *CDROM) SetDescription(v string) {
	o.Description = v
}

// GetDisplayOrder returns value of DisplayOrder
func (o *CDROM) GetDisplayOrder() int {
	return o.DisplayOrder
}

// SetDisplayOrder sets value to DisplayOrder
func (o *CDROM) SetDisplayOrder(v int) {
	o.DisplayOrder = v
}

// GetTags returns value of Tags
func (o *CDROM) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *CDROM) SetTags(v []string) {
	o.Tags = v
}

// GetAvailability returns value of Availability
func (o *CDROM) GetAvailability() enums.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *CDROM) SetAvailability(v enums.EAvailability) {
	o.Availability = v
}

// GetScope returns value of Scope
func (o *CDROM) GetScope() enums.EScope {
	return o.Scope
}

// SetScope sets value to Scope
func (o *CDROM) SetScope(v enums.EScope) {
	o.Scope = v
}

// GetStorageClass returns value of StorageClass
func (o *CDROM) GetStorageClass() string {
	return o.StorageClass
}

// SetStorageClass sets value to StorageClass
func (o *CDROM) SetStorageClass(v string) {
	o.StorageClass = v
}

// GetStorage returns value of Storage
func (o *CDROM) GetStorage() *naked.Storage {
	return o.Storage
}

// SetStorage sets value to Storage
func (o *CDROM) SetStorage(v *naked.Storage) {
	o.Storage = v
}

// GetIcon returns value of Icon
func (o *CDROM) GetIcon() *naked.Icon {
	return o.Icon
}

// SetIcon sets value to Icon
func (o *CDROM) SetIcon(v *naked.Icon) {
	o.Icon = v
}

// GetCreatedAt returns value of CreatedAt
func (o *CDROM) GetCreatedAt() *time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *CDROM) SetCreatedAt(v *time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *CDROM) GetModifiedAt() *time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *CDROM) SetModifiedAt(v *time.Time) {
	o.ModifiedAt = v
}

// toNaked returns naked CDROM
func (o *CDROM) toNaked() (*naked.CDROM, error) {
	dest := &naked.CDROM{}
	err := mapconv.ToNaked(o, dest)
	return dest, err
}

// parseNaked parse values from naked CDROM
func (o *CDROM) parseNaked(naked *naked.CDROM) error {
	return mapconv.FromNaked(naked, o)
}

/*************************************************
* FindCondition
*************************************************/

// FindCondition represents API parameter/response structure
type FindCondition struct {
	Count   int
	From    int
	Sort    []string
	Filter  map[string]interface{}
	Include []string
	Exclude []string
}

// Validate validates by field tags
func (o *FindCondition) Validate() error {
	return validator.New().Struct(o)
}

// GetCount returns value of Count
func (o *FindCondition) GetCount() int {
	return o.Count
}

// SetCount sets value to Count
func (o *FindCondition) SetCount(v int) {
	o.Count = v
}

// GetFrom returns value of From
func (o *FindCondition) GetFrom() int {
	return o.From
}

// SetFrom sets value to From
func (o *FindCondition) SetFrom(v int) {
	o.From = v
}

// GetSort returns value of Sort
func (o *FindCondition) GetSort() []string {
	return o.Sort
}

// SetSort sets value to Sort
func (o *FindCondition) SetSort(v []string) {
	o.Sort = v
}

// GetFilter returns value of Filter
func (o *FindCondition) GetFilter() map[string]interface{} {
	return o.Filter
}

// SetFilter sets value to Filter
func (o *FindCondition) SetFilter(v map[string]interface{}) {
	o.Filter = v
}

// GetInclude returns value of Include
func (o *FindCondition) GetInclude() []string {
	return o.Include
}

// SetInclude sets value to Include
func (o *FindCondition) SetInclude(v []string) {
	o.Include = v
}

// GetExclude returns value of Exclude
func (o *FindCondition) GetExclude() []string {
	return o.Exclude
}

// SetExclude sets value to Exclude
func (o *FindCondition) SetExclude(v []string) {
	o.Exclude = v
}

/*************************************************
* FTPServer
*************************************************/

// FTPServer represents API parameter/response structure
type FTPServer struct {
	HostName  string
	IPAddress string
	User      string
	Password  string
}

// Validate validates by field tags
func (o *FTPServer) Validate() error {
	return validator.New().Struct(o)
}

// GetHostName returns value of HostName
func (o *FTPServer) GetHostName() string {
	return o.HostName
}

// SetHostName sets value to HostName
func (o *FTPServer) SetHostName(v string) {
	o.HostName = v
}

// GetIPAddress returns value of IPAddress
func (o *FTPServer) GetIPAddress() string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *FTPServer) SetIPAddress(v string) {
	o.IPAddress = v
}

// GetUser returns value of User
func (o *FTPServer) GetUser() string {
	return o.User
}

// SetUser sets value to User
func (o *FTPServer) SetUser(v string) {
	o.User = v
}

// GetPassword returns value of Password
func (o *FTPServer) GetPassword() string {
	return o.Password
}

// SetPassword sets value to Password
func (o *FTPServer) SetPassword(v string) {
	o.Password = v
}

// toNaked returns naked FTPServer
func (o *FTPServer) toNaked() (*naked.OpeningFTPServer, error) {
	dest := &naked.OpeningFTPServer{}
	err := mapconv.ToNaked(o, dest)
	return dest, err
}

// parseNaked parse values from naked FTPServer
func (o *FTPServer) parseNaked(naked *naked.OpeningFTPServer) error {
	return mapconv.FromNaked(naked, o)
}

/*************************************************
* CDROMCreateRequest
*************************************************/

// CDROMCreateRequest represents API parameter/response structure
type CDROMCreateRequest struct {
	SizeMB      int
	Name        string `validate:"required"`
	Description string
	Tags        []string
	IconID      int64 `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *CDROMCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetSizeMB returns value of SizeMB
func (o *CDROMCreateRequest) GetSizeMB() int {
	return o.SizeMB
}

// SetSizeMB sets value to SizeMB
func (o *CDROMCreateRequest) SetSizeMB(v int) {
	o.SizeMB = v
}

// GetSizeGB gets value to SizeGB
func (o *CDROMCreateRequest) GetSizeGB() int {
	return getSizeGB(o)
}

// SetSizeGB sets value to SizeGB
func (o *CDROMCreateRequest) SetSizeGB(v int) {
	setSizeGB(o, v)
}

// GetName returns value of Name
func (o *CDROMCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *CDROMCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *CDROMCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *CDROMCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *CDROMCreateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *CDROMCreateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *CDROMCreateRequest) GetIconID() int64 {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *CDROMCreateRequest) SetIconID(v int64) {
	o.IconID = v
}

// toNaked returns naked CDROMCreateRequest
func (o *CDROMCreateRequest) toNaked() (*naked.CDROM, error) {
	dest := &naked.CDROM{}
	err := mapconv.ToNaked(o, dest)
	return dest, err
}

// parseNaked parse values from naked CDROMCreateRequest
func (o *CDROMCreateRequest) parseNaked(naked *naked.CDROM) error {
	return mapconv.FromNaked(naked, o)
}

/*************************************************
* CDROMUpdateRequest
*************************************************/

// CDROMUpdateRequest represents API parameter/response structure
type CDROMUpdateRequest struct {
	Name        string `validate:"required"`
	Description string
	Tags        []string
	IconID      int64 `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *CDROMUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetName returns value of Name
func (o *CDROMUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *CDROMUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *CDROMUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *CDROMUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *CDROMUpdateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *CDROMUpdateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *CDROMUpdateRequest) GetIconID() int64 {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *CDROMUpdateRequest) SetIconID(v int64) {
	o.IconID = v
}

// toNaked returns naked CDROMUpdateRequest
func (o *CDROMUpdateRequest) toNaked() (*naked.CDROM, error) {
	dest := &naked.CDROM{}
	err := mapconv.ToNaked(o, dest)
	return dest, err
}

// parseNaked parse values from naked CDROMUpdateRequest
func (o *CDROMUpdateRequest) parseNaked(naked *naked.CDROM) error {
	return mapconv.FromNaked(naked, o)
}

/*************************************************
* OpenFTPParam
*************************************************/

// OpenFTPParam represents API parameter/response structure
type OpenFTPParam struct {
	ChangePassword bool
}

// Validate validates by field tags
func (o *OpenFTPParam) Validate() error {
	return validator.New().Struct(o)
}

// GetChangePassword returns value of ChangePassword
func (o *OpenFTPParam) GetChangePassword() bool {
	return o.ChangePassword
}

// SetChangePassword sets value to ChangePassword
func (o *OpenFTPParam) SetChangePassword(v bool) {
	o.ChangePassword = v
}

/*************************************************
* Note
*************************************************/

// Note represents API parameter/response structure
type Note struct {
	ID           int64
	Name         string `validate:"required"`
	Description  string
	Tags         []string
	Availability enums.EAvailability
	Scope        enums.EScope
	Class        string
	Content      string
	Icon         *naked.Icon `json:",omitempty"`
	CreatedAt    *time.Time
	ModifiedAt   *time.Time
}

// Validate validates by field tags
func (o *Note) Validate() error {
	return validator.New().Struct(o)
}

// GetID returns value of ID
func (o *Note) GetID() int64 {
	return o.ID
}

// SetID sets value to ID
func (o *Note) SetID(v int64) {
	o.ID = v
}

// GetStringID gets value to StringID
func (o *Note) GetStringID() string {
	return getStringID(o)
}

// SetStringID sets value to StringID
func (o *Note) SetStringID(v string) {
	setStringID(o, v)
}

// GetName returns value of Name
func (o *Note) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Note) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *Note) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *Note) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *Note) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *Note) SetTags(v []string) {
	o.Tags = v
}

// GetAvailability returns value of Availability
func (o *Note) GetAvailability() enums.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *Note) SetAvailability(v enums.EAvailability) {
	o.Availability = v
}

// GetScope returns value of Scope
func (o *Note) GetScope() enums.EScope {
	return o.Scope
}

// SetScope sets value to Scope
func (o *Note) SetScope(v enums.EScope) {
	o.Scope = v
}

// GetClass returns value of Class
func (o *Note) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *Note) SetClass(v string) {
	o.Class = v
}

// GetContent returns value of Content
func (o *Note) GetContent() string {
	return o.Content
}

// SetContent sets value to Content
func (o *Note) SetContent(v string) {
	o.Content = v
}

// GetIcon returns value of Icon
func (o *Note) GetIcon() *naked.Icon {
	return o.Icon
}

// SetIcon sets value to Icon
func (o *Note) SetIcon(v *naked.Icon) {
	o.Icon = v
}

// GetCreatedAt returns value of CreatedAt
func (o *Note) GetCreatedAt() *time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *Note) SetCreatedAt(v *time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *Note) GetModifiedAt() *time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *Note) SetModifiedAt(v *time.Time) {
	o.ModifiedAt = v
}

// toNaked returns naked Note
func (o *Note) toNaked() (*naked.Note, error) {
	dest := &naked.Note{}
	err := mapconv.ToNaked(o, dest)
	return dest, err
}

// parseNaked parse values from naked Note
func (o *Note) parseNaked(naked *naked.Note) error {
	return mapconv.FromNaked(naked, o)
}

/*************************************************
* NoteCreateRequest
*************************************************/

// NoteCreateRequest represents API parameter/response structure
type NoteCreateRequest struct {
	Name    string `validate:"required"`
	Tags    []string
	IconID  int64 `mapconv:"Icon.ID"`
	Class   string
	Content string
}

// Validate validates by field tags
func (o *NoteCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetName returns value of Name
func (o *NoteCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *NoteCreateRequest) SetName(v string) {
	o.Name = v
}

// GetTags returns value of Tags
func (o *NoteCreateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *NoteCreateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *NoteCreateRequest) GetIconID() int64 {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *NoteCreateRequest) SetIconID(v int64) {
	o.IconID = v
}

// GetClass returns value of Class
func (o *NoteCreateRequest) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *NoteCreateRequest) SetClass(v string) {
	o.Class = v
}

// GetContent returns value of Content
func (o *NoteCreateRequest) GetContent() string {
	return o.Content
}

// SetContent sets value to Content
func (o *NoteCreateRequest) SetContent(v string) {
	o.Content = v
}

// toNaked returns naked NoteCreateRequest
func (o *NoteCreateRequest) toNaked() (*naked.Note, error) {
	dest := &naked.Note{}
	err := mapconv.ToNaked(o, dest)
	return dest, err
}

// parseNaked parse values from naked NoteCreateRequest
func (o *NoteCreateRequest) parseNaked(naked *naked.Note) error {
	return mapconv.FromNaked(naked, o)
}

/*************************************************
* NoteUpdateRequest
*************************************************/

// NoteUpdateRequest represents API parameter/response structure
type NoteUpdateRequest struct {
	Name    string `validate:"required"`
	Tags    []string
	IconID  int64 `mapconv:"Icon.ID"`
	Class   string
	Content string
}

// Validate validates by field tags
func (o *NoteUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetName returns value of Name
func (o *NoteUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *NoteUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetTags returns value of Tags
func (o *NoteUpdateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *NoteUpdateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *NoteUpdateRequest) GetIconID() int64 {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *NoteUpdateRequest) SetIconID(v int64) {
	o.IconID = v
}

// GetClass returns value of Class
func (o *NoteUpdateRequest) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *NoteUpdateRequest) SetClass(v string) {
	o.Class = v
}

// GetContent returns value of Content
func (o *NoteUpdateRequest) GetContent() string {
	return o.Content
}

// SetContent sets value to Content
func (o *NoteUpdateRequest) SetContent(v string) {
	o.Content = v
}

// toNaked returns naked NoteUpdateRequest
func (o *NoteUpdateRequest) toNaked() (*naked.Note, error) {
	dest := &naked.Note{}
	err := mapconv.ToNaked(o, dest)
	return dest, err
}

// parseNaked parse values from naked NoteUpdateRequest
func (o *NoteUpdateRequest) parseNaked(naked *naked.Note) error {
	return mapconv.FromNaked(naked, o)
}

/*************************************************
* Switch
*************************************************/

// Switch represents API parameter/response structure
type Switch struct {
	ID          int64
	Name        string `validate:"required"`
	Description string
	Tags        []string
	Icon        *naked.Icon `json:",omitempty"`
	CreatedAt   *time.Time
	ModifiedAt  *time.Time
	Zone        *naked.Zone       `json:",omitempty"`
	UserSubnet  *naked.UserSubnet `json:",omitempty"`
}

// Validate validates by field tags
func (o *Switch) Validate() error {
	return validator.New().Struct(o)
}

// GetID returns value of ID
func (o *Switch) GetID() int64 {
	return o.ID
}

// SetID sets value to ID
func (o *Switch) SetID(v int64) {
	o.ID = v
}

// GetStringID gets value to StringID
func (o *Switch) GetStringID() string {
	return getStringID(o)
}

// SetStringID sets value to StringID
func (o *Switch) SetStringID(v string) {
	setStringID(o, v)
}

// GetName returns value of Name
func (o *Switch) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Switch) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *Switch) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *Switch) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *Switch) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *Switch) SetTags(v []string) {
	o.Tags = v
}

// GetIcon returns value of Icon
func (o *Switch) GetIcon() *naked.Icon {
	return o.Icon
}

// SetIcon sets value to Icon
func (o *Switch) SetIcon(v *naked.Icon) {
	o.Icon = v
}

// GetCreatedAt returns value of CreatedAt
func (o *Switch) GetCreatedAt() *time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *Switch) SetCreatedAt(v *time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *Switch) GetModifiedAt() *time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *Switch) SetModifiedAt(v *time.Time) {
	o.ModifiedAt = v
}

// GetZone returns value of Zone
func (o *Switch) GetZone() *naked.Zone {
	return o.Zone
}

// SetZone sets value to Zone
func (o *Switch) SetZone(v *naked.Zone) {
	o.Zone = v
}

// GetUserSubnet returns value of UserSubnet
func (o *Switch) GetUserSubnet() *naked.UserSubnet {
	return o.UserSubnet
}

// SetUserSubnet sets value to UserSubnet
func (o *Switch) SetUserSubnet(v *naked.UserSubnet) {
	o.UserSubnet = v
}

// toNaked returns naked Switch
func (o *Switch) toNaked() (*naked.Switch, error) {
	dest := &naked.Switch{}
	err := mapconv.ToNaked(o, dest)
	return dest, err
}

// parseNaked parse values from naked Switch
func (o *Switch) parseNaked(naked *naked.Switch) error {
	return mapconv.FromNaked(naked, o)
}

/*************************************************
* SwitchCreateRequest
*************************************************/

// SwitchCreateRequest represents API parameter/response structure
type SwitchCreateRequest struct {
	Name        string `validate:"required"`
	Description string
	Tags        []string
	IconID      int64 `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *SwitchCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetName returns value of Name
func (o *SwitchCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *SwitchCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *SwitchCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *SwitchCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *SwitchCreateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *SwitchCreateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *SwitchCreateRequest) GetIconID() int64 {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *SwitchCreateRequest) SetIconID(v int64) {
	o.IconID = v
}

// toNaked returns naked SwitchCreateRequest
func (o *SwitchCreateRequest) toNaked() (*naked.Switch, error) {
	dest := &naked.Switch{}
	err := mapconv.ToNaked(o, dest)
	return dest, err
}

// parseNaked parse values from naked SwitchCreateRequest
func (o *SwitchCreateRequest) parseNaked(naked *naked.Switch) error {
	return mapconv.FromNaked(naked, o)
}

/*************************************************
* SwitchUpdateRequest
*************************************************/

// SwitchUpdateRequest represents API parameter/response structure
type SwitchUpdateRequest struct {
	Name           string `validate:"required"`
	NetworkMaskLen int    `mapconv:"UserSubnet.NetworkMaskLen" validate:"min=1,max=32"`
	DefaultRoute   string `mapconv:"UserSubnet.DefaultRoute" validate:"ipv4"`
	Description    string
	Tags           []string
	IconID         int64 `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *SwitchUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetName returns value of Name
func (o *SwitchUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *SwitchUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *SwitchUpdateRequest) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *SwitchUpdateRequest) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetDefaultRoute returns value of DefaultRoute
func (o *SwitchUpdateRequest) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *SwitchUpdateRequest) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// GetDescription returns value of Description
func (o *SwitchUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *SwitchUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *SwitchUpdateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *SwitchUpdateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *SwitchUpdateRequest) GetIconID() int64 {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *SwitchUpdateRequest) SetIconID(v int64) {
	o.IconID = v
}

// toNaked returns naked SwitchUpdateRequest
func (o *SwitchUpdateRequest) toNaked() (*naked.Switch, error) {
	dest := &naked.Switch{}
	err := mapconv.ToNaked(o, dest)
	return dest, err
}

// parseNaked parse values from naked SwitchUpdateRequest
func (o *SwitchUpdateRequest) parseNaked(naked *naked.Switch) error {
	return mapconv.FromNaked(naked, o)
}

/*************************************************
* Zone
*************************************************/

// Zone represents API parameter/response structure
type Zone struct {
	ID           int64
	Name         string `validate:"required"`
	Description  string
	DisplayOrder int
	IsDummy      bool
	VNCProxy     *naked.VNCProxy  `json:",omitempty"`
	FTPServer    *naked.FTPServer `json:",omitempty"`
	Region       *naked.Region    `json:",omitempty"`
}

// Validate validates by field tags
func (o *Zone) Validate() error {
	return validator.New().Struct(o)
}

// GetID returns value of ID
func (o *Zone) GetID() int64 {
	return o.ID
}

// SetID sets value to ID
func (o *Zone) SetID(v int64) {
	o.ID = v
}

// GetStringID gets value to StringID
func (o *Zone) GetStringID() string {
	return getStringID(o)
}

// SetStringID sets value to StringID
func (o *Zone) SetStringID(v string) {
	setStringID(o, v)
}

// GetName returns value of Name
func (o *Zone) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Zone) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *Zone) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *Zone) SetDescription(v string) {
	o.Description = v
}

// GetDisplayOrder returns value of DisplayOrder
func (o *Zone) GetDisplayOrder() int {
	return o.DisplayOrder
}

// SetDisplayOrder sets value to DisplayOrder
func (o *Zone) SetDisplayOrder(v int) {
	o.DisplayOrder = v
}

// GetIsDummy returns value of IsDummy
func (o *Zone) GetIsDummy() bool {
	return o.IsDummy
}

// SetIsDummy sets value to IsDummy
func (o *Zone) SetIsDummy(v bool) {
	o.IsDummy = v
}

// GetVNCProxy returns value of VNCProxy
func (o *Zone) GetVNCProxy() *naked.VNCProxy {
	return o.VNCProxy
}

// SetVNCProxy sets value to VNCProxy
func (o *Zone) SetVNCProxy(v *naked.VNCProxy) {
	o.VNCProxy = v
}

// GetFTPServer returns value of FTPServer
func (o *Zone) GetFTPServer() *naked.FTPServer {
	return o.FTPServer
}

// SetFTPServer sets value to FTPServer
func (o *Zone) SetFTPServer(v *naked.FTPServer) {
	o.FTPServer = v
}

// GetRegion returns value of Region
func (o *Zone) GetRegion() *naked.Region {
	return o.Region
}

// SetRegion sets value to Region
func (o *Zone) SetRegion(v *naked.Region) {
	o.Region = v
}

// toNaked returns naked Zone
func (o *Zone) toNaked() (*naked.Zone, error) {
	dest := &naked.Zone{}
	err := mapconv.ToNaked(o, dest)
	return dest, err
}

// parseNaked parse values from naked Zone
func (o *Zone) parseNaked(naked *naked.Zone) error {
	return mapconv.FromNaked(naked, o)
}
