// generated by 'github.com/sacloud/libsacloud/internal/tools/gen-api-models'; DO NOT EDIT

package sacloud

import (
	"time"

	"github.com/sacloud/libsacloud-v2/pkg/mapconv"
	"github.com/sacloud/libsacloud-v2/sacloud/enums"
	"github.com/sacloud/libsacloud-v2/sacloud/naked"
	"gopkg.in/go-playground/validator.v9"
)

/*************************************************
* Note
*************************************************/

// Note represents API parameter/response structure
type Note struct {
	ID           int64
	Name         string `validate:"required"`
	Description  string
	Tags         []string
	Availability enums.EAvailability
	Scope        enums.EScope
	Class        string
	Content      string
	Icon         *naked.Icon `json:",omitempty"`
	CreatedAt    *time.Time
	ModifiedAt   *time.Time
}

// Validate validates by field tags
func (o *Note) Validate() error {
	return validator.New().Struct(o)
}

// GetID returns value of ID
func (o *Note) GetID() int64 {
	return o.ID
}

// SetID sets value to ID
func (o *Note) SetID(v int64) {
	o.ID = v
}

// GetName returns value of Name
func (o *Note) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Note) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *Note) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *Note) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *Note) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *Note) SetTags(v []string) {
	o.Tags = v
}

// GetAvailability returns value of Availability
func (o *Note) GetAvailability() enums.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *Note) SetAvailability(v enums.EAvailability) {
	o.Availability = v
}

// GetScope returns value of Scope
func (o *Note) GetScope() enums.EScope {
	return o.Scope
}

// SetScope sets value to Scope
func (o *Note) SetScope(v enums.EScope) {
	o.Scope = v
}

// GetClass returns value of Class
func (o *Note) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *Note) SetClass(v string) {
	o.Class = v
}

// GetContent returns value of Content
func (o *Note) GetContent() string {
	return o.Content
}

// SetContent sets value to Content
func (o *Note) SetContent(v string) {
	o.Content = v
}

// GetIcon returns value of Icon
func (o *Note) GetIcon() *naked.Icon {
	return o.Icon
}

// SetIcon sets value to Icon
func (o *Note) SetIcon(v *naked.Icon) {
	o.Icon = v
}

// GetCreatedAt returns value of CreatedAt
func (o *Note) GetCreatedAt() *time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *Note) SetCreatedAt(v *time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *Note) GetModifiedAt() *time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *Note) SetModifiedAt(v *time.Time) {
	o.ModifiedAt = v
}

// toNaked returns naked Note
func (o *Note) toNaked() (*naked.Note, error) {
	dest := &naked.Note{}
	err := mapconv.ToNaked(o, dest)
	return dest, err
}

// parseNaked parse values from naked Note
func (o *Note) parseNaked(naked *naked.Note) error {
	return mapconv.FromNaked(naked, o)
}

/*************************************************
* FindCondition
*************************************************/

// FindCondition represents API parameter/response structure
type FindCondition struct {
	Count   int
	From    int
	Sort    []string
	Filter  map[string]interface{}
	Include []string
	Exclude []string
}

// Validate validates by field tags
func (o *FindCondition) Validate() error {
	return validator.New().Struct(o)
}

// GetCount returns value of Count
func (o *FindCondition) GetCount() int {
	return o.Count
}

// SetCount sets value to Count
func (o *FindCondition) SetCount(v int) {
	o.Count = v
}

// GetFrom returns value of From
func (o *FindCondition) GetFrom() int {
	return o.From
}

// SetFrom sets value to From
func (o *FindCondition) SetFrom(v int) {
	o.From = v
}

// GetSort returns value of Sort
func (o *FindCondition) GetSort() []string {
	return o.Sort
}

// SetSort sets value to Sort
func (o *FindCondition) SetSort(v []string) {
	o.Sort = v
}

// GetFilter returns value of Filter
func (o *FindCondition) GetFilter() map[string]interface{} {
	return o.Filter
}

// SetFilter sets value to Filter
func (o *FindCondition) SetFilter(v map[string]interface{}) {
	o.Filter = v
}

// GetInclude returns value of Include
func (o *FindCondition) GetInclude() []string {
	return o.Include
}

// SetInclude sets value to Include
func (o *FindCondition) SetInclude(v []string) {
	o.Include = v
}

// GetExclude returns value of Exclude
func (o *FindCondition) GetExclude() []string {
	return o.Exclude
}

// SetExclude sets value to Exclude
func (o *FindCondition) SetExclude(v []string) {
	o.Exclude = v
}

/*************************************************
* NoteCreateRequest
*************************************************/

// NoteCreateRequest represents API parameter/response structure
type NoteCreateRequest struct {
	Name    string `validate:"required"`
	Tags    []string
	IconID  int64 `mapconv:"Icon.ID"`
	Class   string
	Content string
}

// Validate validates by field tags
func (o *NoteCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetName returns value of Name
func (o *NoteCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *NoteCreateRequest) SetName(v string) {
	o.Name = v
}

// GetTags returns value of Tags
func (o *NoteCreateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *NoteCreateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *NoteCreateRequest) GetIconID() int64 {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *NoteCreateRequest) SetIconID(v int64) {
	o.IconID = v
}

// GetClass returns value of Class
func (o *NoteCreateRequest) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *NoteCreateRequest) SetClass(v string) {
	o.Class = v
}

// GetContent returns value of Content
func (o *NoteCreateRequest) GetContent() string {
	return o.Content
}

// SetContent sets value to Content
func (o *NoteCreateRequest) SetContent(v string) {
	o.Content = v
}

// toNaked returns naked NoteCreateRequest
func (o *NoteCreateRequest) toNaked() (*naked.Note, error) {
	dest := &naked.Note{}
	err := mapconv.ToNaked(o, dest)
	return dest, err
}

// parseNaked parse values from naked NoteCreateRequest
func (o *NoteCreateRequest) parseNaked(naked *naked.Note) error {
	return mapconv.FromNaked(naked, o)
}

/*************************************************
* NoteUpdateRequest
*************************************************/

// NoteUpdateRequest represents API parameter/response structure
type NoteUpdateRequest struct {
	Name    string `validate:"required"`
	Tags    []string
	IconID  int64 `mapconv:"Icon.ID"`
	Class   string
	Content string
}

// Validate validates by field tags
func (o *NoteUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetName returns value of Name
func (o *NoteUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *NoteUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetTags returns value of Tags
func (o *NoteUpdateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *NoteUpdateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *NoteUpdateRequest) GetIconID() int64 {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *NoteUpdateRequest) SetIconID(v int64) {
	o.IconID = v
}

// GetClass returns value of Class
func (o *NoteUpdateRequest) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *NoteUpdateRequest) SetClass(v string) {
	o.Class = v
}

// GetContent returns value of Content
func (o *NoteUpdateRequest) GetContent() string {
	return o.Content
}

// SetContent sets value to Content
func (o *NoteUpdateRequest) SetContent(v string) {
	o.Content = v
}

// toNaked returns naked NoteUpdateRequest
func (o *NoteUpdateRequest) toNaked() (*naked.Note, error) {
	dest := &naked.Note{}
	err := mapconv.ToNaked(o, dest)
	return dest, err
}

// parseNaked parse values from naked NoteUpdateRequest
func (o *NoteUpdateRequest) parseNaked(naked *naked.Note) error {
	return mapconv.FromNaked(naked, o)
}

/*************************************************
* Zone
*************************************************/

// Zone represents API parameter/response structure
type Zone struct {
	ID           int64
	Name         string `validate:"required"`
	Description  string
	DisplayOrder int
	IsDummy      bool
	VNCProxy     *naked.VNCProxy  `json:",omitempty"`
	FTPServer    *naked.FTPServer `json:",omitempty"`
	Region       *naked.Region    `json:",omitempty"`
}

// Validate validates by field tags
func (o *Zone) Validate() error {
	return validator.New().Struct(o)
}

// GetID returns value of ID
func (o *Zone) GetID() int64 {
	return o.ID
}

// SetID sets value to ID
func (o *Zone) SetID(v int64) {
	o.ID = v
}

// GetName returns value of Name
func (o *Zone) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Zone) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *Zone) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *Zone) SetDescription(v string) {
	o.Description = v
}

// GetDisplayOrder returns value of DisplayOrder
func (o *Zone) GetDisplayOrder() int {
	return o.DisplayOrder
}

// SetDisplayOrder sets value to DisplayOrder
func (o *Zone) SetDisplayOrder(v int) {
	o.DisplayOrder = v
}

// GetIsDummy returns value of IsDummy
func (o *Zone) GetIsDummy() bool {
	return o.IsDummy
}

// SetIsDummy sets value to IsDummy
func (o *Zone) SetIsDummy(v bool) {
	o.IsDummy = v
}

// GetVNCProxy returns value of VNCProxy
func (o *Zone) GetVNCProxy() *naked.VNCProxy {
	return o.VNCProxy
}

// SetVNCProxy sets value to VNCProxy
func (o *Zone) SetVNCProxy(v *naked.VNCProxy) {
	o.VNCProxy = v
}

// GetFTPServer returns value of FTPServer
func (o *Zone) GetFTPServer() *naked.FTPServer {
	return o.FTPServer
}

// SetFTPServer sets value to FTPServer
func (o *Zone) SetFTPServer(v *naked.FTPServer) {
	o.FTPServer = v
}

// GetRegion returns value of Region
func (o *Zone) GetRegion() *naked.Region {
	return o.Region
}

// SetRegion sets value to Region
func (o *Zone) SetRegion(v *naked.Region) {
	o.Region = v
}

// toNaked returns naked Zone
func (o *Zone) toNaked() (*naked.Zone, error) {
	dest := &naked.Zone{}
	err := mapconv.ToNaked(o, dest)
	return dest, err
}

// parseNaked parse values from naked Zone
func (o *Zone) parseNaked(naked *naked.Zone) error {
	return mapconv.FromNaked(naked, o)
}
