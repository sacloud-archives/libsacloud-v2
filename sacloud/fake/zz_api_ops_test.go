// generated by 'github.com/sacloud/libsacloud/internal/tools/gen-api-fake-op'; DO NOT EDIT

package fake

import (
	"testing"

	"github.com/sacloud/libsacloud-v2/sacloud"
)

func TestResourceOps(t *testing.T) {

	if op, ok := NewArchiveOp().(sacloud.ArchiveAPI); !ok {
		t.Fatalf("%s is not sacloud.Archive", op)
	}

	if op, ok := NewCDROMOp().(sacloud.CDROMAPI); !ok {
		t.Fatalf("%s is not sacloud.CDROM", op)
	}

	if op, ok := NewDiskOp().(sacloud.DiskAPI); !ok {
		t.Fatalf("%s is not sacloud.Disk", op)
	}

	if op, ok := NewGSLBOp().(sacloud.GSLBAPI); !ok {
		t.Fatalf("%s is not sacloud.GSLB", op)
	}

	if op, ok := NewInterfaceOp().(sacloud.InterfaceAPI); !ok {
		t.Fatalf("%s is not sacloud.Interface", op)
	}

	if op, ok := NewLoadBalancerOp().(sacloud.LoadBalancerAPI); !ok {
		t.Fatalf("%s is not sacloud.LoadBalancer", op)
	}

	if op, ok := NewNFSOp().(sacloud.NFSAPI); !ok {
		t.Fatalf("%s is not sacloud.NFS", op)
	}

	if op, ok := NewNoteOp().(sacloud.NoteAPI); !ok {
		t.Fatalf("%s is not sacloud.Note", op)
	}

	if op, ok := NewServerOp().(sacloud.ServerAPI); !ok {
		t.Fatalf("%s is not sacloud.Server", op)
	}

	if op, ok := NewSwitchOp().(sacloud.SwitchAPI); !ok {
		t.Fatalf("%s is not sacloud.Switch", op)
	}

	if op, ok := NewZoneOp().(sacloud.ZoneAPI); !ok {
		t.Fatalf("%s is not sacloud.Zone", op)
	}

}
