// generated by 'github.com/sacloud/libsacloud/internal/tools/gen-api-models'; DO NOT EDIT

package sacloud

import (
	"time"

	"github.com/sacloud/libsacloud-v2/pkg/mapconv"
	"github.com/sacloud/libsacloud-v2/sacloud/naked"
	"github.com/sacloud/libsacloud-v2/sacloud/types"
	"gopkg.in/go-playground/validator.v9"
)

/*************************************************
* Archive
*************************************************/

// Archive represents API parameter/response structure
type Archive struct {
	ID                        types.ID
	Name                      string `validate:"required"`
	Description               string `validate:"min=0,max=512"`
	Tags                      []string
	DisplayOrder              int
	Availability              types.EAvailability
	Scope                     types.EScope
	SizeMB                    int
	MigratedMB                int
	DiskPlanID                types.ID            `mapconv:"Plan.ID"`
	DiskPlanName              string              `mapconv:"Plan.Name"`
	DiskPlanStorageClass      types.StringFlag    `mapconv:"Plan.StorageClass"`
	SourceDiskID              types.ID            `mapconv:"SourceDisk.ID,omitempty"`
	SourceDiskAvailability    types.EAvailability `mapconv:"SourceDisk.Availability,omitempty"`
	SourceArchiveID           types.ID            `mapconv:"SourceArchive.ID,omitempty"`
	SourceArchiveAvailability types.EAvailability `mapconv:"SourceArchive.Availability,omitempty"`
	BundleInfo                *naked.BundleInfo   `json:",omitempty"`
	Storage                   *naked.Storage      `json:",omitempty"`
	Icon                      *naked.Icon         `json:",omitempty"`
	CreatedAt                 *time.Time
	ModifiedAt                *time.Time
	OriginalArchiveID         types.ID           `mapconv:"OriginalArchive.ID,omitempty"`
	SourceInfo                *SourceArchiveInfo `mapconv:"SourceInfo,recursive"`
}

// Validate validates by field tags
func (o *Archive) Validate() error {
	return validator.New().Struct(o)
}

// GetID returns value of ID
func (o *Archive) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *Archive) SetID(v types.ID) {
	o.ID = v
}

// GetStringID gets value to StringID
func (o *Archive) GetStringID() string {
	return getStringID(o)
}

// SetStringID sets value to StringID
func (o *Archive) SetStringID(v string) {
	setStringID(o, v)
}

// GetInt64ID gets value to Int64ID
func (o *Archive) GetInt64ID() int64 {
	return getInt64ID(o)
}

// SetInt64ID sets value to Int64ID
func (o *Archive) SetInt64ID(v int64) {
	setInt64ID(o, v)
}

// GetName returns value of Name
func (o *Archive) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Archive) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *Archive) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *Archive) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *Archive) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *Archive) SetTags(v []string) {
	o.Tags = v
}

// GetDisplayOrder returns value of DisplayOrder
func (o *Archive) GetDisplayOrder() int {
	return o.DisplayOrder
}

// SetDisplayOrder sets value to DisplayOrder
func (o *Archive) SetDisplayOrder(v int) {
	o.DisplayOrder = v
}

// GetAvailability returns value of Availability
func (o *Archive) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *Archive) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetScope returns value of Scope
func (o *Archive) GetScope() types.EScope {
	return o.Scope
}

// SetScope sets value to Scope
func (o *Archive) SetScope(v types.EScope) {
	o.Scope = v
}

// GetSizeMB returns value of SizeMB
func (o *Archive) GetSizeMB() int {
	return o.SizeMB
}

// SetSizeMB sets value to SizeMB
func (o *Archive) SetSizeMB(v int) {
	o.SizeMB = v
}

// GetSizeGB gets value to SizeGB
func (o *Archive) GetSizeGB() int {
	return getSizeGB(o)
}

// SetSizeGB sets value to SizeGB
func (o *Archive) SetSizeGB(v int) {
	setSizeGB(o, v)
}

// GetMigratedMB returns value of MigratedMB
func (o *Archive) GetMigratedMB() int {
	return o.MigratedMB
}

// SetMigratedMB sets value to MigratedMB
func (o *Archive) SetMigratedMB(v int) {
	o.MigratedMB = v
}

// GetMigratedGB gets value to MigratedGB
func (o *Archive) GetMigratedGB() int {
	return getMigratedGB(o)
}

// SetMigratedGB sets value to MigratedGB
func (o *Archive) SetMigratedGB(v int) {
	setMigratedGB(o, v)
}

// GetDiskPlanID returns value of DiskPlanID
func (o *Archive) GetDiskPlanID() types.ID {
	return o.DiskPlanID
}

// SetDiskPlanID sets value to DiskPlanID
func (o *Archive) SetDiskPlanID(v types.ID) {
	o.DiskPlanID = v
}

// GetDiskPlanName returns value of DiskPlanName
func (o *Archive) GetDiskPlanName() string {
	return o.DiskPlanName
}

// SetDiskPlanName sets value to DiskPlanName
func (o *Archive) SetDiskPlanName(v string) {
	o.DiskPlanName = v
}

// GetDiskPlanStorageClass returns value of DiskPlanStorageClass
func (o *Archive) GetDiskPlanStorageClass() types.StringFlag {
	return o.DiskPlanStorageClass
}

// SetDiskPlanStorageClass sets value to DiskPlanStorageClass
func (o *Archive) SetDiskPlanStorageClass(v types.StringFlag) {
	o.DiskPlanStorageClass = v
}

// GetSourceDiskID returns value of SourceDiskID
func (o *Archive) GetSourceDiskID() types.ID {
	return o.SourceDiskID
}

// SetSourceDiskID sets value to SourceDiskID
func (o *Archive) SetSourceDiskID(v types.ID) {
	o.SourceDiskID = v
}

// GetSourceDiskAvailability returns value of SourceDiskAvailability
func (o *Archive) GetSourceDiskAvailability() types.EAvailability {
	return o.SourceDiskAvailability
}

// SetSourceDiskAvailability sets value to SourceDiskAvailability
func (o *Archive) SetSourceDiskAvailability(v types.EAvailability) {
	o.SourceDiskAvailability = v
}

// GetSourceArchiveID returns value of SourceArchiveID
func (o *Archive) GetSourceArchiveID() types.ID {
	return o.SourceArchiveID
}

// SetSourceArchiveID sets value to SourceArchiveID
func (o *Archive) SetSourceArchiveID(v types.ID) {
	o.SourceArchiveID = v
}

// GetSourceArchiveAvailability returns value of SourceArchiveAvailability
func (o *Archive) GetSourceArchiveAvailability() types.EAvailability {
	return o.SourceArchiveAvailability
}

// SetSourceArchiveAvailability sets value to SourceArchiveAvailability
func (o *Archive) SetSourceArchiveAvailability(v types.EAvailability) {
	o.SourceArchiveAvailability = v
}

// GetBundleInfo returns value of BundleInfo
func (o *Archive) GetBundleInfo() *naked.BundleInfo {
	return o.BundleInfo
}

// SetBundleInfo sets value to BundleInfo
func (o *Archive) SetBundleInfo(v *naked.BundleInfo) {
	o.BundleInfo = v
}

// GetStorage returns value of Storage
func (o *Archive) GetStorage() *naked.Storage {
	return o.Storage
}

// SetStorage sets value to Storage
func (o *Archive) SetStorage(v *naked.Storage) {
	o.Storage = v
}

// GetIcon returns value of Icon
func (o *Archive) GetIcon() *naked.Icon {
	return o.Icon
}

// SetIcon sets value to Icon
func (o *Archive) SetIcon(v *naked.Icon) {
	o.Icon = v
}

// GetCreatedAt returns value of CreatedAt
func (o *Archive) GetCreatedAt() *time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *Archive) SetCreatedAt(v *time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *Archive) GetModifiedAt() *time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *Archive) SetModifiedAt(v *time.Time) {
	o.ModifiedAt = v
}

// GetOriginalArchiveID returns value of OriginalArchiveID
func (o *Archive) GetOriginalArchiveID() types.ID {
	return o.OriginalArchiveID
}

// SetOriginalArchiveID sets value to OriginalArchiveID
func (o *Archive) SetOriginalArchiveID(v types.ID) {
	o.OriginalArchiveID = v
}

// GetSourceInfo returns value of SourceInfo
func (o *Archive) GetSourceInfo() *SourceArchiveInfo {
	return o.SourceInfo
}

// SetSourceInfo sets value to SourceInfo
func (o *Archive) SetSourceInfo(v *SourceArchiveInfo) {
	o.SourceInfo = v
}

// convertTo returns naked Archive
func (o *Archive) convertTo() (*naked.Archive, error) {
	dest := &naked.Archive{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked Archive
func (o *Archive) convertFrom(naked *naked.Archive) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* SourceArchiveInfo
*************************************************/

// SourceArchiveInfo represents API parameter/response structure
type SourceArchiveInfo struct {
	ID        types.ID `mapconv:"ArchiveUnderZone.ID"`
	AccountID types.ID `mapconv:"ArchiveUnderZone.Account.ID"`
	ZoneID    types.ID `mapconv:"ArchiveUnderZone.Zone.ID"`
	ZoneName  string   `mapconv:"ArchiveUnderZone.Zone.Name"`
}

// Validate validates by field tags
func (o *SourceArchiveInfo) Validate() error {
	return validator.New().Struct(o)
}

// GetID returns value of ID
func (o *SourceArchiveInfo) GetID() types.ID {
	return o.ID
}

// GetAccountID returns value of AccountID
func (o *SourceArchiveInfo) GetAccountID() types.ID {
	return o.AccountID
}

// GetZoneID returns value of ZoneID
func (o *SourceArchiveInfo) GetZoneID() types.ID {
	return o.ZoneID
}

// GetZoneName returns value of ZoneName
func (o *SourceArchiveInfo) GetZoneName() string {
	return o.ZoneName
}

/*************************************************
* FindCondition
*************************************************/

// FindCondition represents API parameter/response structure
type FindCondition struct {
	Count   int
	From    int
	Sort    []string
	Filter  map[string]interface{}
	Include []string
	Exclude []string
}

// Validate validates by field tags
func (o *FindCondition) Validate() error {
	return validator.New().Struct(o)
}

// GetCount returns value of Count
func (o *FindCondition) GetCount() int {
	return o.Count
}

// SetCount sets value to Count
func (o *FindCondition) SetCount(v int) {
	o.Count = v
}

// GetFrom returns value of From
func (o *FindCondition) GetFrom() int {
	return o.From
}

// SetFrom sets value to From
func (o *FindCondition) SetFrom(v int) {
	o.From = v
}

// GetSort returns value of Sort
func (o *FindCondition) GetSort() []string {
	return o.Sort
}

// SetSort sets value to Sort
func (o *FindCondition) SetSort(v []string) {
	o.Sort = v
}

// GetFilter returns value of Filter
func (o *FindCondition) GetFilter() map[string]interface{} {
	return o.Filter
}

// SetFilter sets value to Filter
func (o *FindCondition) SetFilter(v map[string]interface{}) {
	o.Filter = v
}

// GetInclude returns value of Include
func (o *FindCondition) GetInclude() []string {
	return o.Include
}

// SetInclude sets value to Include
func (o *FindCondition) SetInclude(v []string) {
	o.Include = v
}

// GetExclude returns value of Exclude
func (o *FindCondition) GetExclude() []string {
	return o.Exclude
}

// SetExclude sets value to Exclude
func (o *FindCondition) SetExclude(v []string) {
	o.Exclude = v
}

/*************************************************
* ArchiveCreateRequest
*************************************************/

// ArchiveCreateRequest represents API parameter/response structure
type ArchiveCreateRequest struct {
	SourceDiskID    types.ID `mapconv:"SourceDisk.ID,omitempty"`
	SourceArchiveID types.ID `mapconv:"SourceArchive.ID,omitempty"`
	Name            string   `validate:"required"`
	Description     string   `validate:"min=0,max=512"`
	Tags            []string
	IconID          types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *ArchiveCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetSourceDiskID returns value of SourceDiskID
func (o *ArchiveCreateRequest) GetSourceDiskID() types.ID {
	return o.SourceDiskID
}

// SetSourceDiskID sets value to SourceDiskID
func (o *ArchiveCreateRequest) SetSourceDiskID(v types.ID) {
	o.SourceDiskID = v
}

// GetSourceArchiveID returns value of SourceArchiveID
func (o *ArchiveCreateRequest) GetSourceArchiveID() types.ID {
	return o.SourceArchiveID
}

// SetSourceArchiveID sets value to SourceArchiveID
func (o *ArchiveCreateRequest) SetSourceArchiveID(v types.ID) {
	o.SourceArchiveID = v
}

// GetName returns value of Name
func (o *ArchiveCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *ArchiveCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *ArchiveCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *ArchiveCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *ArchiveCreateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *ArchiveCreateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *ArchiveCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *ArchiveCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// convertTo returns naked ArchiveCreateRequest
func (o *ArchiveCreateRequest) convertTo() (*naked.Archive, error) {
	dest := &naked.Archive{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked ArchiveCreateRequest
func (o *ArchiveCreateRequest) convertFrom(naked *naked.Archive) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* FTPServer
*************************************************/

// FTPServer represents API parameter/response structure
type FTPServer struct {
	HostName  string
	IPAddress string
	User      string
	Password  string
}

// Validate validates by field tags
func (o *FTPServer) Validate() error {
	return validator.New().Struct(o)
}

// GetHostName returns value of HostName
func (o *FTPServer) GetHostName() string {
	return o.HostName
}

// SetHostName sets value to HostName
func (o *FTPServer) SetHostName(v string) {
	o.HostName = v
}

// GetIPAddress returns value of IPAddress
func (o *FTPServer) GetIPAddress() string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *FTPServer) SetIPAddress(v string) {
	o.IPAddress = v
}

// GetUser returns value of User
func (o *FTPServer) GetUser() string {
	return o.User
}

// SetUser sets value to User
func (o *FTPServer) SetUser(v string) {
	o.User = v
}

// GetPassword returns value of Password
func (o *FTPServer) GetPassword() string {
	return o.Password
}

// SetPassword sets value to Password
func (o *FTPServer) SetPassword(v string) {
	o.Password = v
}

// convertTo returns naked FTPServer
func (o *FTPServer) convertTo() (*naked.OpeningFTPServer, error) {
	dest := &naked.OpeningFTPServer{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked FTPServer
func (o *FTPServer) convertFrom(naked *naked.OpeningFTPServer) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* ArchiveCreateBlankRequest
*************************************************/

// ArchiveCreateBlankRequest represents API parameter/response structure
type ArchiveCreateBlankRequest struct {
	SizeMB      int
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        []string
	IconID      types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *ArchiveCreateBlankRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetSizeMB returns value of SizeMB
func (o *ArchiveCreateBlankRequest) GetSizeMB() int {
	return o.SizeMB
}

// SetSizeMB sets value to SizeMB
func (o *ArchiveCreateBlankRequest) SetSizeMB(v int) {
	o.SizeMB = v
}

// GetSizeGB gets value to SizeGB
func (o *ArchiveCreateBlankRequest) GetSizeGB() int {
	return getSizeGB(o)
}

// SetSizeGB sets value to SizeGB
func (o *ArchiveCreateBlankRequest) SetSizeGB(v int) {
	setSizeGB(o, v)
}

// GetName returns value of Name
func (o *ArchiveCreateBlankRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *ArchiveCreateBlankRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *ArchiveCreateBlankRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *ArchiveCreateBlankRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *ArchiveCreateBlankRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *ArchiveCreateBlankRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *ArchiveCreateBlankRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *ArchiveCreateBlankRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// convertTo returns naked ArchiveCreateBlankRequest
func (o *ArchiveCreateBlankRequest) convertTo() (*naked.Archive, error) {
	dest := &naked.Archive{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked ArchiveCreateBlankRequest
func (o *ArchiveCreateBlankRequest) convertFrom(naked *naked.Archive) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* ArchiveUpdateRequest
*************************************************/

// ArchiveUpdateRequest represents API parameter/response structure
type ArchiveUpdateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        []string
	IconID      types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *ArchiveUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetName returns value of Name
func (o *ArchiveUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *ArchiveUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *ArchiveUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *ArchiveUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *ArchiveUpdateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *ArchiveUpdateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *ArchiveUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *ArchiveUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// convertTo returns naked ArchiveUpdateRequest
func (o *ArchiveUpdateRequest) convertTo() (*naked.Archive, error) {
	dest := &naked.Archive{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked ArchiveUpdateRequest
func (o *ArchiveUpdateRequest) convertFrom(naked *naked.Archive) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* OpenFTPRequest
*************************************************/

// OpenFTPRequest represents API parameter/response structure
type OpenFTPRequest struct {
	ChangePassword bool
}

// Validate validates by field tags
func (o *OpenFTPRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetChangePassword returns value of ChangePassword
func (o *OpenFTPRequest) GetChangePassword() bool {
	return o.ChangePassword
}

// SetChangePassword sets value to ChangePassword
func (o *OpenFTPRequest) SetChangePassword(v bool) {
	o.ChangePassword = v
}

/*************************************************
* CDROM
*************************************************/

// CDROM represents API parameter/response structure
type CDROM struct {
	ID           types.ID
	Name         string `validate:"required"`
	Description  string `validate:"min=0,max=512"`
	DisplayOrder int
	Tags         []string
	Availability types.EAvailability
	Scope        types.EScope
	StorageClass string
	Storage      *naked.Storage `json:",omitempty"`
	Icon         *naked.Icon    `json:",omitempty"`
	CreatedAt    *time.Time
	ModifiedAt   *time.Time
}

// Validate validates by field tags
func (o *CDROM) Validate() error {
	return validator.New().Struct(o)
}

// GetID returns value of ID
func (o *CDROM) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *CDROM) SetID(v types.ID) {
	o.ID = v
}

// GetStringID gets value to StringID
func (o *CDROM) GetStringID() string {
	return getStringID(o)
}

// SetStringID sets value to StringID
func (o *CDROM) SetStringID(v string) {
	setStringID(o, v)
}

// GetInt64ID gets value to Int64ID
func (o *CDROM) GetInt64ID() int64 {
	return getInt64ID(o)
}

// SetInt64ID sets value to Int64ID
func (o *CDROM) SetInt64ID(v int64) {
	setInt64ID(o, v)
}

// GetName returns value of Name
func (o *CDROM) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *CDROM) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *CDROM) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *CDROM) SetDescription(v string) {
	o.Description = v
}

// GetDisplayOrder returns value of DisplayOrder
func (o *CDROM) GetDisplayOrder() int {
	return o.DisplayOrder
}

// SetDisplayOrder sets value to DisplayOrder
func (o *CDROM) SetDisplayOrder(v int) {
	o.DisplayOrder = v
}

// GetTags returns value of Tags
func (o *CDROM) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *CDROM) SetTags(v []string) {
	o.Tags = v
}

// GetAvailability returns value of Availability
func (o *CDROM) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *CDROM) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetScope returns value of Scope
func (o *CDROM) GetScope() types.EScope {
	return o.Scope
}

// SetScope sets value to Scope
func (o *CDROM) SetScope(v types.EScope) {
	o.Scope = v
}

// GetStorageClass returns value of StorageClass
func (o *CDROM) GetStorageClass() string {
	return o.StorageClass
}

// SetStorageClass sets value to StorageClass
func (o *CDROM) SetStorageClass(v string) {
	o.StorageClass = v
}

// GetStorage returns value of Storage
func (o *CDROM) GetStorage() *naked.Storage {
	return o.Storage
}

// SetStorage sets value to Storage
func (o *CDROM) SetStorage(v *naked.Storage) {
	o.Storage = v
}

// GetIcon returns value of Icon
func (o *CDROM) GetIcon() *naked.Icon {
	return o.Icon
}

// SetIcon sets value to Icon
func (o *CDROM) SetIcon(v *naked.Icon) {
	o.Icon = v
}

// GetCreatedAt returns value of CreatedAt
func (o *CDROM) GetCreatedAt() *time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *CDROM) SetCreatedAt(v *time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *CDROM) GetModifiedAt() *time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *CDROM) SetModifiedAt(v *time.Time) {
	o.ModifiedAt = v
}

// convertTo returns naked CDROM
func (o *CDROM) convertTo() (*naked.CDROM, error) {
	dest := &naked.CDROM{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked CDROM
func (o *CDROM) convertFrom(naked *naked.CDROM) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* CDROMCreateRequest
*************************************************/

// CDROMCreateRequest represents API parameter/response structure
type CDROMCreateRequest struct {
	SizeMB      int
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        []string
	IconID      types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *CDROMCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetSizeMB returns value of SizeMB
func (o *CDROMCreateRequest) GetSizeMB() int {
	return o.SizeMB
}

// SetSizeMB sets value to SizeMB
func (o *CDROMCreateRequest) SetSizeMB(v int) {
	o.SizeMB = v
}

// GetSizeGB gets value to SizeGB
func (o *CDROMCreateRequest) GetSizeGB() int {
	return getSizeGB(o)
}

// SetSizeGB sets value to SizeGB
func (o *CDROMCreateRequest) SetSizeGB(v int) {
	setSizeGB(o, v)
}

// GetName returns value of Name
func (o *CDROMCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *CDROMCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *CDROMCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *CDROMCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *CDROMCreateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *CDROMCreateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *CDROMCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *CDROMCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// convertTo returns naked CDROMCreateRequest
func (o *CDROMCreateRequest) convertTo() (*naked.CDROM, error) {
	dest := &naked.CDROM{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked CDROMCreateRequest
func (o *CDROMCreateRequest) convertFrom(naked *naked.CDROM) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* CDROMUpdateRequest
*************************************************/

// CDROMUpdateRequest represents API parameter/response structure
type CDROMUpdateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        []string
	IconID      types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *CDROMUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetName returns value of Name
func (o *CDROMUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *CDROMUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *CDROMUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *CDROMUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *CDROMUpdateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *CDROMUpdateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *CDROMUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *CDROMUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// convertTo returns naked CDROMUpdateRequest
func (o *CDROMUpdateRequest) convertTo() (*naked.CDROM, error) {
	dest := &naked.CDROM{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked CDROMUpdateRequest
func (o *CDROMUpdateRequest) convertFrom(naked *naked.CDROM) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* Disk
*************************************************/

// Disk represents API parameter/response structure
type Disk struct {
	ID                        types.ID
	Name                      string `validate:"required"`
	Description               string `validate:"min=0,max=512"`
	Tags                      []string
	Availability              types.EAvailability
	Connection                types.EDiskConnection
	ConnectionOrder           int
	ReinstallCount            int
	SizeMB                    int
	MigratedMB                int
	DiskPlanID                types.ID            `mapconv:"Plan.ID"`
	DiskPlanName              string              `mapconv:"Plan.Name"`
	DiskPlanStorageClass      types.StringFlag    `mapconv:"Plan.StorageClass"`
	SourceDiskID              types.ID            `mapconv:"SourceDisk.ID,omitempty"`
	SourceDiskAvailability    types.EAvailability `mapconv:"SourceDisk.Availability,omitempty"`
	SourceArchiveID           types.ID            `mapconv:"SourceArchive.ID,omitempty"`
	SourceArchiveAvailability types.EAvailability `mapconv:"SourceArchive.Availability,omitempty"`
	BundleInfo                *naked.BundleInfo   `json:",omitempty"`
	Storage                   *naked.Storage      `json:",omitempty"`
	Icon                      *naked.Icon         `json:",omitempty"`
	CreatedAt                 *time.Time
	ModifiedAt                *time.Time
}

// Validate validates by field tags
func (o *Disk) Validate() error {
	return validator.New().Struct(o)
}

// GetID returns value of ID
func (o *Disk) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *Disk) SetID(v types.ID) {
	o.ID = v
}

// GetStringID gets value to StringID
func (o *Disk) GetStringID() string {
	return getStringID(o)
}

// SetStringID sets value to StringID
func (o *Disk) SetStringID(v string) {
	setStringID(o, v)
}

// GetInt64ID gets value to Int64ID
func (o *Disk) GetInt64ID() int64 {
	return getInt64ID(o)
}

// SetInt64ID sets value to Int64ID
func (o *Disk) SetInt64ID(v int64) {
	setInt64ID(o, v)
}

// GetName returns value of Name
func (o *Disk) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Disk) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *Disk) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *Disk) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *Disk) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *Disk) SetTags(v []string) {
	o.Tags = v
}

// GetAvailability returns value of Availability
func (o *Disk) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *Disk) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetConnection returns value of Connection
func (o *Disk) GetConnection() types.EDiskConnection {
	return o.Connection
}

// SetConnection sets value to Connection
func (o *Disk) SetConnection(v types.EDiskConnection) {
	o.Connection = v
}

// GetConnectionOrder returns value of ConnectionOrder
func (o *Disk) GetConnectionOrder() int {
	return o.ConnectionOrder
}

// SetConnectionOrder sets value to ConnectionOrder
func (o *Disk) SetConnectionOrder(v int) {
	o.ConnectionOrder = v
}

// GetReinstallCount returns value of ReinstallCount
func (o *Disk) GetReinstallCount() int {
	return o.ReinstallCount
}

// SetReinstallCount sets value to ReinstallCount
func (o *Disk) SetReinstallCount(v int) {
	o.ReinstallCount = v
}

// GetSizeMB returns value of SizeMB
func (o *Disk) GetSizeMB() int {
	return o.SizeMB
}

// SetSizeMB sets value to SizeMB
func (o *Disk) SetSizeMB(v int) {
	o.SizeMB = v
}

// GetSizeGB gets value to SizeGB
func (o *Disk) GetSizeGB() int {
	return getSizeGB(o)
}

// SetSizeGB sets value to SizeGB
func (o *Disk) SetSizeGB(v int) {
	setSizeGB(o, v)
}

// GetMigratedMB returns value of MigratedMB
func (o *Disk) GetMigratedMB() int {
	return o.MigratedMB
}

// SetMigratedMB sets value to MigratedMB
func (o *Disk) SetMigratedMB(v int) {
	o.MigratedMB = v
}

// GetMigratedGB gets value to MigratedGB
func (o *Disk) GetMigratedGB() int {
	return getMigratedGB(o)
}

// SetMigratedGB sets value to MigratedGB
func (o *Disk) SetMigratedGB(v int) {
	setMigratedGB(o, v)
}

// GetDiskPlanID returns value of DiskPlanID
func (o *Disk) GetDiskPlanID() types.ID {
	return o.DiskPlanID
}

// SetDiskPlanID sets value to DiskPlanID
func (o *Disk) SetDiskPlanID(v types.ID) {
	o.DiskPlanID = v
}

// GetDiskPlanName returns value of DiskPlanName
func (o *Disk) GetDiskPlanName() string {
	return o.DiskPlanName
}

// SetDiskPlanName sets value to DiskPlanName
func (o *Disk) SetDiskPlanName(v string) {
	o.DiskPlanName = v
}

// GetDiskPlanStorageClass returns value of DiskPlanStorageClass
func (o *Disk) GetDiskPlanStorageClass() types.StringFlag {
	return o.DiskPlanStorageClass
}

// SetDiskPlanStorageClass sets value to DiskPlanStorageClass
func (o *Disk) SetDiskPlanStorageClass(v types.StringFlag) {
	o.DiskPlanStorageClass = v
}

// GetSourceDiskID returns value of SourceDiskID
func (o *Disk) GetSourceDiskID() types.ID {
	return o.SourceDiskID
}

// SetSourceDiskID sets value to SourceDiskID
func (o *Disk) SetSourceDiskID(v types.ID) {
	o.SourceDiskID = v
}

// GetSourceDiskAvailability returns value of SourceDiskAvailability
func (o *Disk) GetSourceDiskAvailability() types.EAvailability {
	return o.SourceDiskAvailability
}

// SetSourceDiskAvailability sets value to SourceDiskAvailability
func (o *Disk) SetSourceDiskAvailability(v types.EAvailability) {
	o.SourceDiskAvailability = v
}

// GetSourceArchiveID returns value of SourceArchiveID
func (o *Disk) GetSourceArchiveID() types.ID {
	return o.SourceArchiveID
}

// SetSourceArchiveID sets value to SourceArchiveID
func (o *Disk) SetSourceArchiveID(v types.ID) {
	o.SourceArchiveID = v
}

// GetSourceArchiveAvailability returns value of SourceArchiveAvailability
func (o *Disk) GetSourceArchiveAvailability() types.EAvailability {
	return o.SourceArchiveAvailability
}

// SetSourceArchiveAvailability sets value to SourceArchiveAvailability
func (o *Disk) SetSourceArchiveAvailability(v types.EAvailability) {
	o.SourceArchiveAvailability = v
}

// GetBundleInfo returns value of BundleInfo
func (o *Disk) GetBundleInfo() *naked.BundleInfo {
	return o.BundleInfo
}

// SetBundleInfo sets value to BundleInfo
func (o *Disk) SetBundleInfo(v *naked.BundleInfo) {
	o.BundleInfo = v
}

// GetStorage returns value of Storage
func (o *Disk) GetStorage() *naked.Storage {
	return o.Storage
}

// SetStorage sets value to Storage
func (o *Disk) SetStorage(v *naked.Storage) {
	o.Storage = v
}

// GetIcon returns value of Icon
func (o *Disk) GetIcon() *naked.Icon {
	return o.Icon
}

// SetIcon sets value to Icon
func (o *Disk) SetIcon(v *naked.Icon) {
	o.Icon = v
}

// GetCreatedAt returns value of CreatedAt
func (o *Disk) GetCreatedAt() *time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *Disk) SetCreatedAt(v *time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *Disk) GetModifiedAt() *time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *Disk) SetModifiedAt(v *time.Time) {
	o.ModifiedAt = v
}

// convertTo returns naked Disk
func (o *Disk) convertTo() (*naked.Disk, error) {
	dest := &naked.Disk{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked Disk
func (o *Disk) convertFrom(naked *naked.Disk) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* DiskCreateRequest
*************************************************/

// DiskCreateRequest represents API parameter/response structure
type DiskCreateRequest struct {
	DiskPlanID      types.ID `mapconv:"Plan.ID"`
	Connection      types.EDiskConnection
	SourceDiskID    types.ID `mapconv:"SourceDisk.ID,omitempty"`
	SourceArchiveID types.ID `mapconv:"SourceArchive.ID,omitempty"`
	ServerID        types.ID `mapconv:"Server.ID,omitempty"`
	SizeMB          int
	Name            string `validate:"required"`
	Description     string `validate:"min=0,max=512"`
	Tags            []string
	IconID          types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *DiskCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetDiskPlanID returns value of DiskPlanID
func (o *DiskCreateRequest) GetDiskPlanID() types.ID {
	return o.DiskPlanID
}

// SetDiskPlanID sets value to DiskPlanID
func (o *DiskCreateRequest) SetDiskPlanID(v types.ID) {
	o.DiskPlanID = v
}

// GetConnection returns value of Connection
func (o *DiskCreateRequest) GetConnection() types.EDiskConnection {
	return o.Connection
}

// SetConnection sets value to Connection
func (o *DiskCreateRequest) SetConnection(v types.EDiskConnection) {
	o.Connection = v
}

// GetSourceDiskID returns value of SourceDiskID
func (o *DiskCreateRequest) GetSourceDiskID() types.ID {
	return o.SourceDiskID
}

// SetSourceDiskID sets value to SourceDiskID
func (o *DiskCreateRequest) SetSourceDiskID(v types.ID) {
	o.SourceDiskID = v
}

// GetSourceArchiveID returns value of SourceArchiveID
func (o *DiskCreateRequest) GetSourceArchiveID() types.ID {
	return o.SourceArchiveID
}

// SetSourceArchiveID sets value to SourceArchiveID
func (o *DiskCreateRequest) SetSourceArchiveID(v types.ID) {
	o.SourceArchiveID = v
}

// GetServerID returns value of ServerID
func (o *DiskCreateRequest) GetServerID() types.ID {
	return o.ServerID
}

// SetServerID sets value to ServerID
func (o *DiskCreateRequest) SetServerID(v types.ID) {
	o.ServerID = v
}

// GetSizeMB returns value of SizeMB
func (o *DiskCreateRequest) GetSizeMB() int {
	return o.SizeMB
}

// SetSizeMB sets value to SizeMB
func (o *DiskCreateRequest) SetSizeMB(v int) {
	o.SizeMB = v
}

// GetSizeGB gets value to SizeGB
func (o *DiskCreateRequest) GetSizeGB() int {
	return getSizeGB(o)
}

// SetSizeGB sets value to SizeGB
func (o *DiskCreateRequest) SetSizeGB(v int) {
	setSizeGB(o, v)
}

// GetName returns value of Name
func (o *DiskCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *DiskCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *DiskCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *DiskCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *DiskCreateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *DiskCreateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *DiskCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *DiskCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// convertTo returns naked DiskCreateRequest
func (o *DiskCreateRequest) convertTo() (*naked.Disk, error) {
	dest := &naked.Disk{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked DiskCreateRequest
func (o *DiskCreateRequest) convertFrom(naked *naked.Disk) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* DiskEditRequest
*************************************************/

// DiskEditRequest represents API parameter/response structure
type DiskEditRequest struct {
	Password            string              `json:",omitempty" mapconv:",omitempty"`
	SSHKey              *DiskEditSSHKey     `json:",omitempty" mapconv:",omitempty,recursive"`
	SSHKeys             []*DiskEditSSHKey   `json:",omitempty" mapconv:"[]SSHKeys,omitempty,recursive"`
	DisablePWAuth       bool                `json:",omitempty" mapconv:",omitempty"`
	EnableDHCP          bool                `json:",omitempty" mapconv:",omitempty"`
	ChangePartitionUUID bool                `json:",omitempty" mapconv:",omitempty"`
	HostName            string              `json:",omitempty" mapconv:",omitempty"`
	Notes               []*DiskEditNote     `json:",omitempty" mapconv:",omitempty,recursive"`
	UserIPAddress       string              `json:",omitempty" mapconv:",omitempty"`
	UserSubnet          *DiskEditUserSubnet `json:",omitempty" mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *DiskEditRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetPassword returns value of Password
func (o *DiskEditRequest) GetPassword() string {
	return o.Password
}

// SetPassword sets value to Password
func (o *DiskEditRequest) SetPassword(v string) {
	o.Password = v
}

// GetSSHKey returns value of SSHKey
func (o *DiskEditRequest) GetSSHKey() *DiskEditSSHKey {
	return o.SSHKey
}

// SetSSHKey sets value to SSHKey
func (o *DiskEditRequest) SetSSHKey(v *DiskEditSSHKey) {
	o.SSHKey = v
}

// GetSSHKeys returns value of SSHKeys
func (o *DiskEditRequest) GetSSHKeys() []*DiskEditSSHKey {
	return o.SSHKeys
}

// SetSSHKeys sets value to SSHKeys
func (o *DiskEditRequest) SetSSHKeys(v []*DiskEditSSHKey) {
	o.SSHKeys = v
}

// GetDisablePWAuth returns value of DisablePWAuth
func (o *DiskEditRequest) GetDisablePWAuth() bool {
	return o.DisablePWAuth
}

// SetDisablePWAuth sets value to DisablePWAuth
func (o *DiskEditRequest) SetDisablePWAuth(v bool) {
	o.DisablePWAuth = v
}

// GetEnableDHCP returns value of EnableDHCP
func (o *DiskEditRequest) GetEnableDHCP() bool {
	return o.EnableDHCP
}

// SetEnableDHCP sets value to EnableDHCP
func (o *DiskEditRequest) SetEnableDHCP(v bool) {
	o.EnableDHCP = v
}

// GetChangePartitionUUID returns value of ChangePartitionUUID
func (o *DiskEditRequest) GetChangePartitionUUID() bool {
	return o.ChangePartitionUUID
}

// SetChangePartitionUUID sets value to ChangePartitionUUID
func (o *DiskEditRequest) SetChangePartitionUUID(v bool) {
	o.ChangePartitionUUID = v
}

// GetHostName returns value of HostName
func (o *DiskEditRequest) GetHostName() string {
	return o.HostName
}

// SetHostName sets value to HostName
func (o *DiskEditRequest) SetHostName(v string) {
	o.HostName = v
}

// GetNotes returns value of Notes
func (o *DiskEditRequest) GetNotes() []*DiskEditNote {
	return o.Notes
}

// SetNotes sets value to Notes
func (o *DiskEditRequest) SetNotes(v []*DiskEditNote) {
	o.Notes = v
}

// GetUserIPAddress returns value of UserIPAddress
func (o *DiskEditRequest) GetUserIPAddress() string {
	return o.UserIPAddress
}

// SetUserIPAddress sets value to UserIPAddress
func (o *DiskEditRequest) SetUserIPAddress(v string) {
	o.UserIPAddress = v
}

// GetUserSubnet returns value of UserSubnet
func (o *DiskEditRequest) GetUserSubnet() *DiskEditUserSubnet {
	return o.UserSubnet
}

// SetUserSubnet sets value to UserSubnet
func (o *DiskEditRequest) SetUserSubnet(v *DiskEditUserSubnet) {
	o.UserSubnet = v
}

// convertTo returns naked DiskEditRequest
func (o *DiskEditRequest) convertTo() (*naked.DiskEdit, error) {
	dest := &naked.DiskEdit{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked DiskEditRequest
func (o *DiskEditRequest) convertFrom(naked *naked.DiskEdit) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* DiskEditSSHKey
*************************************************/

// DiskEditSSHKey represents API parameter/response structure
type DiskEditSSHKey struct {
	ID        types.ID `json:",omitempty" mapconv:",omitempty"`
	PublicKey string   `json:",omitempty" mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *DiskEditSSHKey) Validate() error {
	return validator.New().Struct(o)
}

// GetID returns value of ID
func (o *DiskEditSSHKey) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *DiskEditSSHKey) SetID(v types.ID) {
	o.ID = v
}

// GetPublicKey returns value of PublicKey
func (o *DiskEditSSHKey) GetPublicKey() string {
	return o.PublicKey
}

// SetPublicKey sets value to PublicKey
func (o *DiskEditSSHKey) SetPublicKey(v string) {
	o.PublicKey = v
}

/*************************************************
* DiskEditNote
*************************************************/

// DiskEditNote represents API parameter/response structure
type DiskEditNote struct {
	ID        types.ID               `json:",omitempty" mapconv:",omitempty"`
	Variables map[string]interface{} `json:",omitempty" mapconv:",omitempty"`
}

// Validate validates by field tags
func (o *DiskEditNote) Validate() error {
	return validator.New().Struct(o)
}

// GetID returns value of ID
func (o *DiskEditNote) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *DiskEditNote) SetID(v types.ID) {
	o.ID = v
}

// GetVariables returns value of Variables
func (o *DiskEditNote) GetVariables() map[string]interface{} {
	return o.Variables
}

// SetVariables sets value to Variables
func (o *DiskEditNote) SetVariables(v map[string]interface{}) {
	o.Variables = v
}

/*************************************************
* DiskEditUserSubnet
*************************************************/

// DiskEditUserSubnet represents API parameter/response structure
type DiskEditUserSubnet struct {
	DefaultRoute   string `json:",omitempty" mapconv:",omitempty"`
	NetworkMaskLen int    `json:",omitempty" mapconv:",omitempty" validate:"min=0,max=32"`
}

// Validate validates by field tags
func (o *DiskEditUserSubnet) Validate() error {
	return validator.New().Struct(o)
}

// GetDefaultRoute returns value of DefaultRoute
func (o *DiskEditUserSubnet) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *DiskEditUserSubnet) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *DiskEditUserSubnet) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *DiskEditUserSubnet) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

/*************************************************
* DiskUpdateRequest
*************************************************/

// DiskUpdateRequest represents API parameter/response structure
type DiskUpdateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        []string
	IconID      types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *DiskUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetName returns value of Name
func (o *DiskUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *DiskUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *DiskUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *DiskUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *DiskUpdateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *DiskUpdateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *DiskUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *DiskUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// convertTo returns naked DiskUpdateRequest
func (o *DiskUpdateRequest) convertTo() (*naked.Disk, error) {
	dest := &naked.Disk{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked DiskUpdateRequest
func (o *DiskUpdateRequest) convertFrom(naked *naked.Disk) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* DiskActivity
*************************************************/

// DiskActivity represents API parameter/response structure
type DiskActivity struct {
	Values []naked.MonitorDiskValue `mapconv:"Disk"`
}

// Validate validates by field tags
func (o *DiskActivity) Validate() error {
	return validator.New().Struct(o)
}

// GetValues returns value of Values
func (o *DiskActivity) GetValues() []naked.MonitorDiskValue {
	return o.Values
}

// convertTo returns naked DiskActivity
func (o *DiskActivity) convertTo() (*naked.MonitorValues, error) {
	dest := &naked.MonitorValues{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked DiskActivity
func (o *DiskActivity) convertFrom(naked *naked.MonitorValues) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* MonitorCondition
*************************************************/

// MonitorCondition represents API parameter/response structure
type MonitorCondition struct {
	Start *time.Time `json:",omitempty"`
	End   *time.Time `json:",omitempty"`
}

// Validate validates by field tags
func (o *MonitorCondition) Validate() error {
	return validator.New().Struct(o)
}

// GetStart returns value of Start
func (o *MonitorCondition) GetStart() *time.Time {
	return o.Start
}

// SetStart sets value to Start
func (o *MonitorCondition) SetStart(v *time.Time) {
	o.Start = v
}

// GetEnd returns value of End
func (o *MonitorCondition) GetEnd() *time.Time {
	return o.End
}

// SetEnd sets value to End
func (o *MonitorCondition) SetEnd(v *time.Time) {
	o.End = v
}

/*************************************************
* GSLB
*************************************************/

// GSLB represents API parameter/response structure
type GSLB struct {
	ID                      types.ID
	Name                    string `validate:"required"`
	Description             string `validate:"min=0,max=512"`
	Tags                    []string
	Availability            types.EAvailability
	Icon                    *naked.Icon `json:",omitempty"`
	CreatedAt               *time.Time
	ModifiedAt              *time.Time
	Class                   string `mapconv:"Provider.Class,default=gslb"`
	SettingsHash            string
	FQDN                    string             `mapconv:"Status.FQDN"`
	DelayLoop               int                `mapconv:"Settings.GSLB.DelayLoop,default=10" validate:"min=10,max=60"`
	Weighted                types.StringFlag   `mapconv:"Settings.GSLB.Weighted"`
	HealthCheckProtocol     string             `mapconv:"Settings.GSLB.HealthCheck.Protocol" validate:"oneof=http https ping tcp"`
	HealthCheckHostHeader   string             `mapconv:"Settings.GSLB.HealthCheck.Host"`
	HealthCheckPath         string             `mapconv:"Settings.GSLB.HealthCheck.Path"`
	HealthCheckResponseCode types.StringNumber `mapconv:"Settings.GSLB.HealthCheck.Status"`
	HealthCheckPort         types.StringNumber `mapconv:"Settings.GSLB.HealthCheck.Port"`
	SorryServer             string             `mapconv:"Settings.GSLB.SorryServer"`
	DestinationServers      []*GSLBServer      `mapconv:"Settings.GSLB.[]Servers,recursive" validate:"min=0,max=6"`
}

// Validate validates by field tags
func (o *GSLB) Validate() error {
	return validator.New().Struct(o)
}

// GetID returns value of ID
func (o *GSLB) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *GSLB) SetID(v types.ID) {
	o.ID = v
}

// GetStringID gets value to StringID
func (o *GSLB) GetStringID() string {
	return getStringID(o)
}

// SetStringID sets value to StringID
func (o *GSLB) SetStringID(v string) {
	setStringID(o, v)
}

// GetInt64ID gets value to Int64ID
func (o *GSLB) GetInt64ID() int64 {
	return getInt64ID(o)
}

// SetInt64ID sets value to Int64ID
func (o *GSLB) SetInt64ID(v int64) {
	setInt64ID(o, v)
}

// GetName returns value of Name
func (o *GSLB) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *GSLB) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *GSLB) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *GSLB) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *GSLB) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *GSLB) SetTags(v []string) {
	o.Tags = v
}

// GetAvailability returns value of Availability
func (o *GSLB) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *GSLB) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetIcon returns value of Icon
func (o *GSLB) GetIcon() *naked.Icon {
	return o.Icon
}

// SetIcon sets value to Icon
func (o *GSLB) SetIcon(v *naked.Icon) {
	o.Icon = v
}

// GetCreatedAt returns value of CreatedAt
func (o *GSLB) GetCreatedAt() *time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *GSLB) SetCreatedAt(v *time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *GSLB) GetModifiedAt() *time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *GSLB) SetModifiedAt(v *time.Time) {
	o.ModifiedAt = v
}

// GetClass returns value of Class
func (o *GSLB) GetClass() string {
	return o.Class
}

// GetSettingsHash returns value of SettingsHash
func (o *GSLB) GetSettingsHash() string {
	return o.SettingsHash
}

// GetFQDN returns value of FQDN
func (o *GSLB) GetFQDN() string {
	return o.FQDN
}

// GetDelayLoop returns value of DelayLoop
func (o *GSLB) GetDelayLoop() int {
	return o.DelayLoop
}

// SetDelayLoop sets value to DelayLoop
func (o *GSLB) SetDelayLoop(v int) {
	o.DelayLoop = v
}

// GetWeighted returns value of Weighted
func (o *GSLB) GetWeighted() types.StringFlag {
	return o.Weighted
}

// SetWeighted sets value to Weighted
func (o *GSLB) SetWeighted(v types.StringFlag) {
	o.Weighted = v
}

// GetHealthCheckProtocol returns value of HealthCheckProtocol
func (o *GSLB) GetHealthCheckProtocol() string {
	return o.HealthCheckProtocol
}

// SetHealthCheckProtocol sets value to HealthCheckProtocol
func (o *GSLB) SetHealthCheckProtocol(v string) {
	o.HealthCheckProtocol = v
}

// GetHealthCheckHostHeader returns value of HealthCheckHostHeader
func (o *GSLB) GetHealthCheckHostHeader() string {
	return o.HealthCheckHostHeader
}

// SetHealthCheckHostHeader sets value to HealthCheckHostHeader
func (o *GSLB) SetHealthCheckHostHeader(v string) {
	o.HealthCheckHostHeader = v
}

// GetHealthCheckPath returns value of HealthCheckPath
func (o *GSLB) GetHealthCheckPath() string {
	return o.HealthCheckPath
}

// SetHealthCheckPath sets value to HealthCheckPath
func (o *GSLB) SetHealthCheckPath(v string) {
	o.HealthCheckPath = v
}

// GetHealthCheckResponseCode returns value of HealthCheckResponseCode
func (o *GSLB) GetHealthCheckResponseCode() types.StringNumber {
	return o.HealthCheckResponseCode
}

// SetHealthCheckResponseCode sets value to HealthCheckResponseCode
func (o *GSLB) SetHealthCheckResponseCode(v types.StringNumber) {
	o.HealthCheckResponseCode = v
}

// GetHealthCheckPort returns value of HealthCheckPort
func (o *GSLB) GetHealthCheckPort() types.StringNumber {
	return o.HealthCheckPort
}

// SetHealthCheckPort sets value to HealthCheckPort
func (o *GSLB) SetHealthCheckPort(v types.StringNumber) {
	o.HealthCheckPort = v
}

// GetSorryServer returns value of SorryServer
func (o *GSLB) GetSorryServer() string {
	return o.SorryServer
}

// SetSorryServer sets value to SorryServer
func (o *GSLB) SetSorryServer(v string) {
	o.SorryServer = v
}

// GetDestinationServers returns value of DestinationServers
func (o *GSLB) GetDestinationServers() []*GSLBServer {
	return o.DestinationServers
}

// SetDestinationServers sets value to DestinationServers
func (o *GSLB) SetDestinationServers(v []*GSLBServer) {
	o.DestinationServers = v
}

// convertTo returns naked GSLB
func (o *GSLB) convertTo() (*naked.GSLB, error) {
	dest := &naked.GSLB{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked GSLB
func (o *GSLB) convertFrom(naked *naked.GSLB) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* GSLBServer
*************************************************/

// GSLBServer represents API parameter/response structure
type GSLBServer struct {
	IPAddress string `validate:"ipv4"`
	Enabled   types.StringFlag
	Weight    types.StringNumber `mapconv:",default=1"`
}

// Validate validates by field tags
func (o *GSLBServer) Validate() error {
	return validator.New().Struct(o)
}

// GetIPAddress returns value of IPAddress
func (o *GSLBServer) GetIPAddress() string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *GSLBServer) SetIPAddress(v string) {
	o.IPAddress = v
}

// GetEnabled returns value of Enabled
func (o *GSLBServer) GetEnabled() types.StringFlag {
	return o.Enabled
}

// SetEnabled sets value to Enabled
func (o *GSLBServer) SetEnabled(v types.StringFlag) {
	o.Enabled = v
}

// GetWeight returns value of Weight
func (o *GSLBServer) GetWeight() types.StringNumber {
	return o.Weight
}

// SetWeight sets value to Weight
func (o *GSLBServer) SetWeight(v types.StringNumber) {
	o.Weight = v
}

/*************************************************
* GSLBCreateRequest
*************************************************/

// GSLBCreateRequest represents API parameter/response structure
type GSLBCreateRequest struct {
	Class                   string             `mapconv:"Provider.Class,default=gslb"`
	HealthCheckProtocol     string             `mapconv:"Settings.GSLB.HealthCheck.Protocol" validate:"oneof=http https ping tcp"`
	HealthCheckHostHeader   string             `mapconv:"Settings.GSLB.HealthCheck.Host"`
	HealthCheckPath         string             `mapconv:"Settings.GSLB.HealthCheck.Path"`
	HealthCheckResponseCode types.StringNumber `mapconv:"Settings.GSLB.HealthCheck.Status"`
	HealthCheckPort         types.StringNumber `mapconv:"Settings.GSLB.HealthCheck.Port"`
	DelayLoop               int                `mapconv:"Settings.GSLB.DelayLoop,default=10" validate:"min=10,max=60"`
	Weighted                types.StringFlag   `mapconv:"Settings.GSLB.Weighted"`
	SorryServer             string             `mapconv:"Settings.GSLB.SorryServer"`
	DestinationServers      []*GSLBServer      `mapconv:"Settings.GSLB.[]Servers,recursive" validate:"min=0,max=6"`
	Name                    string             `validate:"required"`
	Description             string             `validate:"min=0,max=512"`
	Tags                    []string
	IconID                  types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *GSLBCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetClass returns value of Class
func (o *GSLBCreateRequest) GetClass() string {
	return o.Class
}

// GetHealthCheckProtocol returns value of HealthCheckProtocol
func (o *GSLBCreateRequest) GetHealthCheckProtocol() string {
	return o.HealthCheckProtocol
}

// SetHealthCheckProtocol sets value to HealthCheckProtocol
func (o *GSLBCreateRequest) SetHealthCheckProtocol(v string) {
	o.HealthCheckProtocol = v
}

// GetHealthCheckHostHeader returns value of HealthCheckHostHeader
func (o *GSLBCreateRequest) GetHealthCheckHostHeader() string {
	return o.HealthCheckHostHeader
}

// SetHealthCheckHostHeader sets value to HealthCheckHostHeader
func (o *GSLBCreateRequest) SetHealthCheckHostHeader(v string) {
	o.HealthCheckHostHeader = v
}

// GetHealthCheckPath returns value of HealthCheckPath
func (o *GSLBCreateRequest) GetHealthCheckPath() string {
	return o.HealthCheckPath
}

// SetHealthCheckPath sets value to HealthCheckPath
func (o *GSLBCreateRequest) SetHealthCheckPath(v string) {
	o.HealthCheckPath = v
}

// GetHealthCheckResponseCode returns value of HealthCheckResponseCode
func (o *GSLBCreateRequest) GetHealthCheckResponseCode() types.StringNumber {
	return o.HealthCheckResponseCode
}

// SetHealthCheckResponseCode sets value to HealthCheckResponseCode
func (o *GSLBCreateRequest) SetHealthCheckResponseCode(v types.StringNumber) {
	o.HealthCheckResponseCode = v
}

// GetHealthCheckPort returns value of HealthCheckPort
func (o *GSLBCreateRequest) GetHealthCheckPort() types.StringNumber {
	return o.HealthCheckPort
}

// SetHealthCheckPort sets value to HealthCheckPort
func (o *GSLBCreateRequest) SetHealthCheckPort(v types.StringNumber) {
	o.HealthCheckPort = v
}

// GetDelayLoop returns value of DelayLoop
func (o *GSLBCreateRequest) GetDelayLoop() int {
	return o.DelayLoop
}

// SetDelayLoop sets value to DelayLoop
func (o *GSLBCreateRequest) SetDelayLoop(v int) {
	o.DelayLoop = v
}

// GetWeighted returns value of Weighted
func (o *GSLBCreateRequest) GetWeighted() types.StringFlag {
	return o.Weighted
}

// SetWeighted sets value to Weighted
func (o *GSLBCreateRequest) SetWeighted(v types.StringFlag) {
	o.Weighted = v
}

// GetSorryServer returns value of SorryServer
func (o *GSLBCreateRequest) GetSorryServer() string {
	return o.SorryServer
}

// SetSorryServer sets value to SorryServer
func (o *GSLBCreateRequest) SetSorryServer(v string) {
	o.SorryServer = v
}

// GetDestinationServers returns value of DestinationServers
func (o *GSLBCreateRequest) GetDestinationServers() []*GSLBServer {
	return o.DestinationServers
}

// SetDestinationServers sets value to DestinationServers
func (o *GSLBCreateRequest) SetDestinationServers(v []*GSLBServer) {
	o.DestinationServers = v
}

// GetName returns value of Name
func (o *GSLBCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *GSLBCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *GSLBCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *GSLBCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *GSLBCreateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *GSLBCreateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *GSLBCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *GSLBCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// convertTo returns naked GSLBCreateRequest
func (o *GSLBCreateRequest) convertTo() (*naked.GSLB, error) {
	dest := &naked.GSLB{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked GSLBCreateRequest
func (o *GSLBCreateRequest) convertFrom(naked *naked.GSLB) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* GSLBUpdateRequest
*************************************************/

// GSLBUpdateRequest represents API parameter/response structure
type GSLBUpdateRequest struct {
	HealthCheckProtocol     string             `mapconv:"Settings.GSLB.HealthCheck.Protocol" validate:"oneof=http https ping tcp"`
	HealthCheckHostHeader   string             `mapconv:"Settings.GSLB.HealthCheck.Host"`
	HealthCheckPath         string             `mapconv:"Settings.GSLB.HealthCheck.Path"`
	HealthCheckResponseCode types.StringNumber `mapconv:"Settings.GSLB.HealthCheck.Status"`
	HealthCheckPort         types.StringNumber `mapconv:"Settings.GSLB.HealthCheck.Port"`
	DelayLoop               int                `mapconv:"Settings.GSLB.DelayLoop,default=10" validate:"min=10,max=60"`
	Weighted                types.StringFlag   `mapconv:"Settings.GSLB.Weighted"`
	SorryServer             string             `mapconv:"Settings.GSLB.SorryServer"`
	DestinationServers      []*GSLBServer      `mapconv:"Settings.GSLB.[]Servers,recursive" validate:"min=0,max=6"`
	Name                    string             `validate:"required"`
	Description             string             `validate:"min=0,max=512"`
	Tags                    []string
	IconID                  types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *GSLBUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetHealthCheckProtocol returns value of HealthCheckProtocol
func (o *GSLBUpdateRequest) GetHealthCheckProtocol() string {
	return o.HealthCheckProtocol
}

// SetHealthCheckProtocol sets value to HealthCheckProtocol
func (o *GSLBUpdateRequest) SetHealthCheckProtocol(v string) {
	o.HealthCheckProtocol = v
}

// GetHealthCheckHostHeader returns value of HealthCheckHostHeader
func (o *GSLBUpdateRequest) GetHealthCheckHostHeader() string {
	return o.HealthCheckHostHeader
}

// SetHealthCheckHostHeader sets value to HealthCheckHostHeader
func (o *GSLBUpdateRequest) SetHealthCheckHostHeader(v string) {
	o.HealthCheckHostHeader = v
}

// GetHealthCheckPath returns value of HealthCheckPath
func (o *GSLBUpdateRequest) GetHealthCheckPath() string {
	return o.HealthCheckPath
}

// SetHealthCheckPath sets value to HealthCheckPath
func (o *GSLBUpdateRequest) SetHealthCheckPath(v string) {
	o.HealthCheckPath = v
}

// GetHealthCheckResponseCode returns value of HealthCheckResponseCode
func (o *GSLBUpdateRequest) GetHealthCheckResponseCode() types.StringNumber {
	return o.HealthCheckResponseCode
}

// SetHealthCheckResponseCode sets value to HealthCheckResponseCode
func (o *GSLBUpdateRequest) SetHealthCheckResponseCode(v types.StringNumber) {
	o.HealthCheckResponseCode = v
}

// GetHealthCheckPort returns value of HealthCheckPort
func (o *GSLBUpdateRequest) GetHealthCheckPort() types.StringNumber {
	return o.HealthCheckPort
}

// SetHealthCheckPort sets value to HealthCheckPort
func (o *GSLBUpdateRequest) SetHealthCheckPort(v types.StringNumber) {
	o.HealthCheckPort = v
}

// GetDelayLoop returns value of DelayLoop
func (o *GSLBUpdateRequest) GetDelayLoop() int {
	return o.DelayLoop
}

// SetDelayLoop sets value to DelayLoop
func (o *GSLBUpdateRequest) SetDelayLoop(v int) {
	o.DelayLoop = v
}

// GetWeighted returns value of Weighted
func (o *GSLBUpdateRequest) GetWeighted() types.StringFlag {
	return o.Weighted
}

// SetWeighted sets value to Weighted
func (o *GSLBUpdateRequest) SetWeighted(v types.StringFlag) {
	o.Weighted = v
}

// GetSorryServer returns value of SorryServer
func (o *GSLBUpdateRequest) GetSorryServer() string {
	return o.SorryServer
}

// SetSorryServer sets value to SorryServer
func (o *GSLBUpdateRequest) SetSorryServer(v string) {
	o.SorryServer = v
}

// GetDestinationServers returns value of DestinationServers
func (o *GSLBUpdateRequest) GetDestinationServers() []*GSLBServer {
	return o.DestinationServers
}

// SetDestinationServers sets value to DestinationServers
func (o *GSLBUpdateRequest) SetDestinationServers(v []*GSLBServer) {
	o.DestinationServers = v
}

// GetName returns value of Name
func (o *GSLBUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *GSLBUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *GSLBUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *GSLBUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *GSLBUpdateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *GSLBUpdateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *GSLBUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *GSLBUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// convertTo returns naked GSLBUpdateRequest
func (o *GSLBUpdateRequest) convertTo() (*naked.GSLB, error) {
	dest := &naked.GSLB{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked GSLBUpdateRequest
func (o *GSLBUpdateRequest) convertFrom(naked *naked.GSLB) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* LoadBalancer
*************************************************/

// LoadBalancer represents API parameter/response structure
type LoadBalancer struct {
	ID                      types.ID
	Name                    string `validate:"required"`
	Description             string `validate:"min=0,max=512"`
	Tags                    []string
	Availability            types.EAvailability
	Class                   string
	Icon                    *naked.Icon `json:",omitempty"`
	CreatedAt               *time.Time
	ModifiedAt              *time.Time
	InstanceHostName        string                      `mapconv:"Instance.Host.Name"`
	InstanceHostInfoURL     string                      `mapconv:"Instance.Host.InfoURL"`
	InstanceStatus          types.EServerInstanceStatus `mapconv:"Instance.Status"`
	InstanceStatusChangedAt *time.Time                  `mapconv:"Instance.StatusChangedAt"`
	Interfaces              []naked.Interface
	PlanID                  types.ID                        `mapconv:"Remark.Plan.ID,Plan.ID"`
	SwitchID                types.ID                        `mapconv:"Remark.Switch.ID"`
	Switch                  *naked.Switch                   `json:",omitempty"`
	DefaultRoute            string                          `mapconv:"Remark.Network.DefaultRoute" validate:"ipv4"`
	NetworkMaskLen          int                             `mapconv:"Remark.Network.NetworkMaskLen" validate:"min=1,max=32"`
	IPAddresses             []string                        `mapconv:"Remark.[]Servers.IPAddress"`
	ZoneID                  types.ID                        `mapconv:"Remark.Zone.ID"`
	VRID                    int                             `mapconv:"Remark.VRRP.VRID"`
	VirtualIPAddresses      []*LoadBalancerVirtualIPAddress `mapconv:"Settings.[]LoadBalancer,recursive" validate:"min=0,max=10"`
	SettingsHash            string
}

// Validate validates by field tags
func (o *LoadBalancer) Validate() error {
	return validator.New().Struct(o)
}

// GetID returns value of ID
func (o *LoadBalancer) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *LoadBalancer) SetID(v types.ID) {
	o.ID = v
}

// GetStringID gets value to StringID
func (o *LoadBalancer) GetStringID() string {
	return getStringID(o)
}

// SetStringID sets value to StringID
func (o *LoadBalancer) SetStringID(v string) {
	setStringID(o, v)
}

// GetInt64ID gets value to Int64ID
func (o *LoadBalancer) GetInt64ID() int64 {
	return getInt64ID(o)
}

// SetInt64ID sets value to Int64ID
func (o *LoadBalancer) SetInt64ID(v int64) {
	setInt64ID(o, v)
}

// GetName returns value of Name
func (o *LoadBalancer) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *LoadBalancer) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *LoadBalancer) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *LoadBalancer) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *LoadBalancer) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *LoadBalancer) SetTags(v []string) {
	o.Tags = v
}

// GetAvailability returns value of Availability
func (o *LoadBalancer) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *LoadBalancer) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetClass returns value of Class
func (o *LoadBalancer) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *LoadBalancer) SetClass(v string) {
	o.Class = v
}

// GetIcon returns value of Icon
func (o *LoadBalancer) GetIcon() *naked.Icon {
	return o.Icon
}

// SetIcon sets value to Icon
func (o *LoadBalancer) SetIcon(v *naked.Icon) {
	o.Icon = v
}

// GetCreatedAt returns value of CreatedAt
func (o *LoadBalancer) GetCreatedAt() *time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *LoadBalancer) SetCreatedAt(v *time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *LoadBalancer) GetModifiedAt() *time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *LoadBalancer) SetModifiedAt(v *time.Time) {
	o.ModifiedAt = v
}

// GetInstanceHostName returns value of InstanceHostName
func (o *LoadBalancer) GetInstanceHostName() string {
	return o.InstanceHostName
}

// GetInstanceHostInfoURL returns value of InstanceHostInfoURL
func (o *LoadBalancer) GetInstanceHostInfoURL() string {
	return o.InstanceHostInfoURL
}

// GetInstanceStatus returns value of InstanceStatus
func (o *LoadBalancer) GetInstanceStatus() types.EServerInstanceStatus {
	return o.InstanceStatus
}

// GetInstanceStatusChangedAt returns value of InstanceStatusChangedAt
func (o *LoadBalancer) GetInstanceStatusChangedAt() *time.Time {
	return o.InstanceStatusChangedAt
}

// GetInterfaces returns value of Interfaces
func (o *LoadBalancer) GetInterfaces() []naked.Interface {
	return o.Interfaces
}

// GetPlanID returns value of PlanID
func (o *LoadBalancer) GetPlanID() types.ID {
	return o.PlanID
}

// SetPlanID sets value to PlanID
func (o *LoadBalancer) SetPlanID(v types.ID) {
	o.PlanID = v
}

// GetSwitchID returns value of SwitchID
func (o *LoadBalancer) GetSwitchID() types.ID {
	return o.SwitchID
}

// SetSwitchID sets value to SwitchID
func (o *LoadBalancer) SetSwitchID(v types.ID) {
	o.SwitchID = v
}

// GetSwitch returns value of Switch
func (o *LoadBalancer) GetSwitch() *naked.Switch {
	return o.Switch
}

// SetSwitch sets value to Switch
func (o *LoadBalancer) SetSwitch(v *naked.Switch) {
	o.Switch = v
}

// GetDefaultRoute returns value of DefaultRoute
func (o *LoadBalancer) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *LoadBalancer) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *LoadBalancer) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *LoadBalancer) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetIPAddresses returns value of IPAddresses
func (o *LoadBalancer) GetIPAddresses() []string {
	return o.IPAddresses
}

// SetIPAddresses sets value to IPAddresses
func (o *LoadBalancer) SetIPAddresses(v []string) {
	o.IPAddresses = v
}

// GetZoneID returns value of ZoneID
func (o *LoadBalancer) GetZoneID() types.ID {
	return o.ZoneID
}

// GetVRID returns value of VRID
func (o *LoadBalancer) GetVRID() int {
	return o.VRID
}

// SetVRID sets value to VRID
func (o *LoadBalancer) SetVRID(v int) {
	o.VRID = v
}

// GetVirtualIPAddresses returns value of VirtualIPAddresses
func (o *LoadBalancer) GetVirtualIPAddresses() []*LoadBalancerVirtualIPAddress {
	return o.VirtualIPAddresses
}

// SetVirtualIPAddresses sets value to VirtualIPAddresses
func (o *LoadBalancer) SetVirtualIPAddresses(v []*LoadBalancerVirtualIPAddress) {
	o.VirtualIPAddresses = v
}

// GetSettingsHash returns value of SettingsHash
func (o *LoadBalancer) GetSettingsHash() string {
	return o.SettingsHash
}

// convertTo returns naked LoadBalancer
func (o *LoadBalancer) convertTo() (*naked.LoadBalancer, error) {
	dest := &naked.LoadBalancer{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked LoadBalancer
func (o *LoadBalancer) convertFrom(naked *naked.LoadBalancer) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* LoadBalancerVirtualIPAddress
*************************************************/

// LoadBalancerVirtualIPAddress represents API parameter/response structure
type LoadBalancerVirtualIPAddress struct {
	VirtualIPAddress string `validate:"ipv4"`
	Port             types.StringNumber
	DelayLoop        types.StringNumber    `mapconv:",default=10" validate:"min=0,max=60"`
	SorryServer      string                `validate:"ipv4"`
	Description      string                `validate:"min=0,max=512"`
	Servers          []*LoadBalancerServer `mapconv:",recursive" validate:"min=0,max=40"`
}

// Validate validates by field tags
func (o *LoadBalancerVirtualIPAddress) Validate() error {
	return validator.New().Struct(o)
}

// GetVirtualIPAddress returns value of VirtualIPAddress
func (o *LoadBalancerVirtualIPAddress) GetVirtualIPAddress() string {
	return o.VirtualIPAddress
}

// SetVirtualIPAddress sets value to VirtualIPAddress
func (o *LoadBalancerVirtualIPAddress) SetVirtualIPAddress(v string) {
	o.VirtualIPAddress = v
}

// GetPort returns value of Port
func (o *LoadBalancerVirtualIPAddress) GetPort() types.StringNumber {
	return o.Port
}

// SetPort sets value to Port
func (o *LoadBalancerVirtualIPAddress) SetPort(v types.StringNumber) {
	o.Port = v
}

// GetDelayLoop returns value of DelayLoop
func (o *LoadBalancerVirtualIPAddress) GetDelayLoop() types.StringNumber {
	return o.DelayLoop
}

// SetDelayLoop sets value to DelayLoop
func (o *LoadBalancerVirtualIPAddress) SetDelayLoop(v types.StringNumber) {
	o.DelayLoop = v
}

// GetSorryServer returns value of SorryServer
func (o *LoadBalancerVirtualIPAddress) GetSorryServer() string {
	return o.SorryServer
}

// SetSorryServer sets value to SorryServer
func (o *LoadBalancerVirtualIPAddress) SetSorryServer(v string) {
	o.SorryServer = v
}

// GetDescription returns value of Description
func (o *LoadBalancerVirtualIPAddress) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *LoadBalancerVirtualIPAddress) SetDescription(v string) {
	o.Description = v
}

// GetServers returns value of Servers
func (o *LoadBalancerVirtualIPAddress) GetServers() []*LoadBalancerServer {
	return o.Servers
}

// SetServers sets value to Servers
func (o *LoadBalancerVirtualIPAddress) SetServers(v []*LoadBalancerServer) {
	o.Servers = v
}

/*************************************************
* LoadBalancerServer
*************************************************/

// LoadBalancerServer represents API parameter/response structure
type LoadBalancerServer struct {
	IPAddress               string             `validate:"ipv4"`
	Port                    types.StringNumber `validate:"min=1,max=65535"`
	Enabled                 types.StringFlag
	HealthCheckProtocol     string             `mapconv:"HealthCheck.Protocol" validate:"oneof=http https ping tcp"`
	HealthCheckPath         string             `mapconv:"HealthCheck.Path"`
	HealthCheckResponseCode types.StringNumber `mapconv:"HealthCheck.Status"`
}

// Validate validates by field tags
func (o *LoadBalancerServer) Validate() error {
	return validator.New().Struct(o)
}

// GetIPAddress returns value of IPAddress
func (o *LoadBalancerServer) GetIPAddress() string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *LoadBalancerServer) SetIPAddress(v string) {
	o.IPAddress = v
}

// GetPort returns value of Port
func (o *LoadBalancerServer) GetPort() types.StringNumber {
	return o.Port
}

// SetPort sets value to Port
func (o *LoadBalancerServer) SetPort(v types.StringNumber) {
	o.Port = v
}

// GetEnabled returns value of Enabled
func (o *LoadBalancerServer) GetEnabled() types.StringFlag {
	return o.Enabled
}

// SetEnabled sets value to Enabled
func (o *LoadBalancerServer) SetEnabled(v types.StringFlag) {
	o.Enabled = v
}

// GetHealthCheckProtocol returns value of HealthCheckProtocol
func (o *LoadBalancerServer) GetHealthCheckProtocol() string {
	return o.HealthCheckProtocol
}

// SetHealthCheckProtocol sets value to HealthCheckProtocol
func (o *LoadBalancerServer) SetHealthCheckProtocol(v string) {
	o.HealthCheckProtocol = v
}

// GetHealthCheckPath returns value of HealthCheckPath
func (o *LoadBalancerServer) GetHealthCheckPath() string {
	return o.HealthCheckPath
}

// SetHealthCheckPath sets value to HealthCheckPath
func (o *LoadBalancerServer) SetHealthCheckPath(v string) {
	o.HealthCheckPath = v
}

// GetHealthCheckResponseCode returns value of HealthCheckResponseCode
func (o *LoadBalancerServer) GetHealthCheckResponseCode() types.StringNumber {
	return o.HealthCheckResponseCode
}

// SetHealthCheckResponseCode sets value to HealthCheckResponseCode
func (o *LoadBalancerServer) SetHealthCheckResponseCode(v types.StringNumber) {
	o.HealthCheckResponseCode = v
}

/*************************************************
* LoadBalancerCreateRequest
*************************************************/

// LoadBalancerCreateRequest represents API parameter/response structure
type LoadBalancerCreateRequest struct {
	Class              string   `mapconv:",default=loadbalancer"`
	SwitchID           types.ID `mapconv:"Remark.Switch.ID"`
	PlanID             types.ID `mapconv:"Remark.Plan.ID,Plan.ID"`
	VRID               int      `mapconv:"Remark.VRRP.VRID"`
	IPAddresses        []string `mapconv:"Remark.[]Servers.IPAddress" validate:"min=1,max=2,dive,ipv4"`
	NetworkMaskLen     int      `mapconv:"Remark.Network.NetworkMaskLen" validate:"min=1,max=32"`
	DefaultRoute       string   `mapconv:"Remark.Network.DefaultRoute" validate:"ipv4"`
	Name               string   `validate:"required"`
	Description        string   `validate:"min=0,max=512"`
	Tags               []string
	IconID             types.ID                        `mapconv:"Icon.ID"`
	VirtualIPAddresses []*LoadBalancerVirtualIPAddress `mapconv:"Settings.[]LoadBalancer,recursive" validate:"min=0,max=10"`
}

// Validate validates by field tags
func (o *LoadBalancerCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetClass returns value of Class
func (o *LoadBalancerCreateRequest) GetClass() string {
	return o.Class
}

// GetSwitchID returns value of SwitchID
func (o *LoadBalancerCreateRequest) GetSwitchID() types.ID {
	return o.SwitchID
}

// SetSwitchID sets value to SwitchID
func (o *LoadBalancerCreateRequest) SetSwitchID(v types.ID) {
	o.SwitchID = v
}

// GetPlanID returns value of PlanID
func (o *LoadBalancerCreateRequest) GetPlanID() types.ID {
	return o.PlanID
}

// SetPlanID sets value to PlanID
func (o *LoadBalancerCreateRequest) SetPlanID(v types.ID) {
	o.PlanID = v
}

// GetVRID returns value of VRID
func (o *LoadBalancerCreateRequest) GetVRID() int {
	return o.VRID
}

// SetVRID sets value to VRID
func (o *LoadBalancerCreateRequest) SetVRID(v int) {
	o.VRID = v
}

// GetIPAddresses returns value of IPAddresses
func (o *LoadBalancerCreateRequest) GetIPAddresses() []string {
	return o.IPAddresses
}

// SetIPAddresses sets value to IPAddresses
func (o *LoadBalancerCreateRequest) SetIPAddresses(v []string) {
	o.IPAddresses = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *LoadBalancerCreateRequest) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *LoadBalancerCreateRequest) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetDefaultRoute returns value of DefaultRoute
func (o *LoadBalancerCreateRequest) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *LoadBalancerCreateRequest) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// GetName returns value of Name
func (o *LoadBalancerCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *LoadBalancerCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *LoadBalancerCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *LoadBalancerCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *LoadBalancerCreateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *LoadBalancerCreateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *LoadBalancerCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *LoadBalancerCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// GetVirtualIPAddresses returns value of VirtualIPAddresses
func (o *LoadBalancerCreateRequest) GetVirtualIPAddresses() []*LoadBalancerVirtualIPAddress {
	return o.VirtualIPAddresses
}

// SetVirtualIPAddresses sets value to VirtualIPAddresses
func (o *LoadBalancerCreateRequest) SetVirtualIPAddresses(v []*LoadBalancerVirtualIPAddress) {
	o.VirtualIPAddresses = v
}

// convertTo returns naked LoadBalancerCreateRequest
func (o *LoadBalancerCreateRequest) convertTo() (*naked.LoadBalancer, error) {
	dest := &naked.LoadBalancer{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked LoadBalancerCreateRequest
func (o *LoadBalancerCreateRequest) convertFrom(naked *naked.LoadBalancer) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* LoadBalancerUpdateRequest
*************************************************/

// LoadBalancerUpdateRequest represents API parameter/response structure
type LoadBalancerUpdateRequest struct {
	Name               string `validate:"required"`
	Description        string `validate:"min=0,max=512"`
	Tags               []string
	IconID             types.ID                        `mapconv:"Icon.ID"`
	VirtualIPAddresses []*LoadBalancerVirtualIPAddress `mapconv:"Settings.[]LoadBalancer,recursive" validate:"min=0,max=10"`
}

// Validate validates by field tags
func (o *LoadBalancerUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetName returns value of Name
func (o *LoadBalancerUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *LoadBalancerUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *LoadBalancerUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *LoadBalancerUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *LoadBalancerUpdateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *LoadBalancerUpdateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *LoadBalancerUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *LoadBalancerUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// GetVirtualIPAddresses returns value of VirtualIPAddresses
func (o *LoadBalancerUpdateRequest) GetVirtualIPAddresses() []*LoadBalancerVirtualIPAddress {
	return o.VirtualIPAddresses
}

// SetVirtualIPAddresses sets value to VirtualIPAddresses
func (o *LoadBalancerUpdateRequest) SetVirtualIPAddresses(v []*LoadBalancerVirtualIPAddress) {
	o.VirtualIPAddresses = v
}

// convertTo returns naked LoadBalancerUpdateRequest
func (o *LoadBalancerUpdateRequest) convertTo() (*naked.LoadBalancer, error) {
	dest := &naked.LoadBalancer{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked LoadBalancerUpdateRequest
func (o *LoadBalancerUpdateRequest) convertFrom(naked *naked.LoadBalancer) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* ShutdownOption
*************************************************/

// ShutdownOption represents API parameter/response structure
type ShutdownOption struct {
	Force bool
}

// Validate validates by field tags
func (o *ShutdownOption) Validate() error {
	return validator.New().Struct(o)
}

// GetForce returns value of Force
func (o *ShutdownOption) GetForce() bool {
	return o.Force
}

// SetForce sets value to Force
func (o *ShutdownOption) SetForce(v bool) {
	o.Force = v
}

/*************************************************
* InterfaceActivity
*************************************************/

// InterfaceActivity represents API parameter/response structure
type InterfaceActivity struct {
	Values []naked.MonitorInterfaceValue `mapconv:"Interface"`
}

// Validate validates by field tags
func (o *InterfaceActivity) Validate() error {
	return validator.New().Struct(o)
}

// GetValues returns value of Values
func (o *InterfaceActivity) GetValues() []naked.MonitorInterfaceValue {
	return o.Values
}

// convertTo returns naked InterfaceActivity
func (o *InterfaceActivity) convertTo() (*naked.MonitorValues, error) {
	dest := &naked.MonitorValues{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked InterfaceActivity
func (o *InterfaceActivity) convertFrom(naked *naked.MonitorValues) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* LoadBalancerStatus
*************************************************/

// LoadBalancerStatus represents API parameter/response structure
type LoadBalancerStatus struct {
	VirtualIPAddress string
	Port             types.StringNumber
	CPS              types.StringNumber
	Servers          []*LoadBalancerServerStatus `mapconv:",recursive"`
}

// Validate validates by field tags
func (o *LoadBalancerStatus) Validate() error {
	return validator.New().Struct(o)
}

// GetVirtualIPAddress returns value of VirtualIPAddress
func (o *LoadBalancerStatus) GetVirtualIPAddress() string {
	return o.VirtualIPAddress
}

// GetPort returns value of Port
func (o *LoadBalancerStatus) GetPort() types.StringNumber {
	return o.Port
}

// GetCPS returns value of CPS
func (o *LoadBalancerStatus) GetCPS() types.StringNumber {
	return o.CPS
}

// GetServers returns value of Servers
func (o *LoadBalancerStatus) GetServers() []*LoadBalancerServerStatus {
	return o.Servers
}

// convertTo returns naked LoadBalancerStatus
func (o *LoadBalancerStatus) convertTo() (*naked.LoadBalancerStatus, error) {
	dest := &naked.LoadBalancerStatus{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked LoadBalancerStatus
func (o *LoadBalancerStatus) convertFrom(naked *naked.LoadBalancerStatus) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* LoadBalancerServerStatus
*************************************************/

// LoadBalancerServerStatus represents API parameter/response structure
type LoadBalancerServerStatus struct {
	ActiveConn types.StringNumber
	Status     types.EServerInstanceStatus
	IPAddress  string
	Port       types.StringNumber
	CPS        types.StringNumber
}

// Validate validates by field tags
func (o *LoadBalancerServerStatus) Validate() error {
	return validator.New().Struct(o)
}

// GetActiveConn returns value of ActiveConn
func (o *LoadBalancerServerStatus) GetActiveConn() types.StringNumber {
	return o.ActiveConn
}

// GetStatus returns value of Status
func (o *LoadBalancerServerStatus) GetStatus() types.EServerInstanceStatus {
	return o.Status
}

// GetIPAddress returns value of IPAddress
func (o *LoadBalancerServerStatus) GetIPAddress() string {
	return o.IPAddress
}

// GetPort returns value of Port
func (o *LoadBalancerServerStatus) GetPort() types.StringNumber {
	return o.Port
}

// GetCPS returns value of CPS
func (o *LoadBalancerServerStatus) GetCPS() types.StringNumber {
	return o.CPS
}

/*************************************************
* NFS
*************************************************/

// NFS represents API parameter/response structure
type NFS struct {
	ID                      types.ID
	Name                    string `validate:"required"`
	Description             string `validate:"min=0,max=512"`
	Tags                    []string
	Availability            types.EAvailability
	Class                   string
	InstanceHostName        string                      `mapconv:"Instance.Host.Name"`
	InstanceHostInfoURL     string                      `mapconv:"Instance.Host.InfoURL"`
	InstanceStatus          types.EServerInstanceStatus `mapconv:"Instance.Status"`
	InstanceStatusChangedAt *time.Time                  `mapconv:"Instance.StatusChangedAt"`
	Interfaces              []naked.Interface
	PlanID                  types.ID      `mapconv:"Remark.Plan.ID,Plan.ID"`
	SwitchID                types.ID      `mapconv:"Remark.Switch.ID"`
	Switch                  *naked.Switch `json:",omitempty"`
	DefaultRoute            string        `mapconv:"Remark.Network.DefaultRoute" validate:"ipv4"`
	NetworkMaskLen          int           `mapconv:"Remark.Network.NetworkMaskLen" validate:"min=1,max=32"`
	IPAddresses             []string      `mapconv:"Remark.[]Servers.IPAddress"`
	ZoneID                  types.ID      `mapconv:"Remark.Zone.ID"`
	Icon                    *naked.Icon   `json:",omitempty"`
	CreatedAt               *time.Time
	ModifiedAt              *time.Time
}

// Validate validates by field tags
func (o *NFS) Validate() error {
	return validator.New().Struct(o)
}

// GetID returns value of ID
func (o *NFS) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *NFS) SetID(v types.ID) {
	o.ID = v
}

// GetStringID gets value to StringID
func (o *NFS) GetStringID() string {
	return getStringID(o)
}

// SetStringID sets value to StringID
func (o *NFS) SetStringID(v string) {
	setStringID(o, v)
}

// GetInt64ID gets value to Int64ID
func (o *NFS) GetInt64ID() int64 {
	return getInt64ID(o)
}

// SetInt64ID sets value to Int64ID
func (o *NFS) SetInt64ID(v int64) {
	setInt64ID(o, v)
}

// GetName returns value of Name
func (o *NFS) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *NFS) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *NFS) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *NFS) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *NFS) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *NFS) SetTags(v []string) {
	o.Tags = v
}

// GetAvailability returns value of Availability
func (o *NFS) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *NFS) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetClass returns value of Class
func (o *NFS) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *NFS) SetClass(v string) {
	o.Class = v
}

// GetInstanceHostName returns value of InstanceHostName
func (o *NFS) GetInstanceHostName() string {
	return o.InstanceHostName
}

// GetInstanceHostInfoURL returns value of InstanceHostInfoURL
func (o *NFS) GetInstanceHostInfoURL() string {
	return o.InstanceHostInfoURL
}

// GetInstanceStatus returns value of InstanceStatus
func (o *NFS) GetInstanceStatus() types.EServerInstanceStatus {
	return o.InstanceStatus
}

// GetInstanceStatusChangedAt returns value of InstanceStatusChangedAt
func (o *NFS) GetInstanceStatusChangedAt() *time.Time {
	return o.InstanceStatusChangedAt
}

// GetInterfaces returns value of Interfaces
func (o *NFS) GetInterfaces() []naked.Interface {
	return o.Interfaces
}

// GetPlanID returns value of PlanID
func (o *NFS) GetPlanID() types.ID {
	return o.PlanID
}

// SetPlanID sets value to PlanID
func (o *NFS) SetPlanID(v types.ID) {
	o.PlanID = v
}

// GetSwitchID returns value of SwitchID
func (o *NFS) GetSwitchID() types.ID {
	return o.SwitchID
}

// SetSwitchID sets value to SwitchID
func (o *NFS) SetSwitchID(v types.ID) {
	o.SwitchID = v
}

// GetSwitch returns value of Switch
func (o *NFS) GetSwitch() *naked.Switch {
	return o.Switch
}

// SetSwitch sets value to Switch
func (o *NFS) SetSwitch(v *naked.Switch) {
	o.Switch = v
}

// GetDefaultRoute returns value of DefaultRoute
func (o *NFS) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *NFS) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *NFS) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *NFS) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetIPAddresses returns value of IPAddresses
func (o *NFS) GetIPAddresses() []string {
	return o.IPAddresses
}

// SetIPAddresses sets value to IPAddresses
func (o *NFS) SetIPAddresses(v []string) {
	o.IPAddresses = v
}

// GetZoneID returns value of ZoneID
func (o *NFS) GetZoneID() types.ID {
	return o.ZoneID
}

// GetIcon returns value of Icon
func (o *NFS) GetIcon() *naked.Icon {
	return o.Icon
}

// SetIcon sets value to Icon
func (o *NFS) SetIcon(v *naked.Icon) {
	o.Icon = v
}

// GetCreatedAt returns value of CreatedAt
func (o *NFS) GetCreatedAt() *time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *NFS) SetCreatedAt(v *time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *NFS) GetModifiedAt() *time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *NFS) SetModifiedAt(v *time.Time) {
	o.ModifiedAt = v
}

// convertTo returns naked NFS
func (o *NFS) convertTo() (*naked.NFS, error) {
	dest := &naked.NFS{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked NFS
func (o *NFS) convertFrom(naked *naked.NFS) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* NFSCreateRequest
*************************************************/

// NFSCreateRequest represents API parameter/response structure
type NFSCreateRequest struct {
	Class          string   `mapconv:",default=nfs"`
	SwitchID       types.ID `mapconv:"Remark.Switch.ID"`
	PlanID         types.ID `mapconv:"Remark.Plan.ID,Plan.ID"`
	IPAddress      string   `mapconv:"Remark.[]Servers.IPAddress"`
	NetworkMaskLen int      `mapconv:"Remark.Network.NetworkMaskLen" validate:"min=1,max=32"`
	DefaultRoute   string   `mapconv:"Remark.Network.DefaultRoute" validate:"ipv4"`
	Name           string   `validate:"required"`
	Description    string   `validate:"min=0,max=512"`
	Tags           []string
	IconID         types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *NFSCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetClass returns value of Class
func (o *NFSCreateRequest) GetClass() string {
	return o.Class
}

// GetSwitchID returns value of SwitchID
func (o *NFSCreateRequest) GetSwitchID() types.ID {
	return o.SwitchID
}

// SetSwitchID sets value to SwitchID
func (o *NFSCreateRequest) SetSwitchID(v types.ID) {
	o.SwitchID = v
}

// GetPlanID returns value of PlanID
func (o *NFSCreateRequest) GetPlanID() types.ID {
	return o.PlanID
}

// SetPlanID sets value to PlanID
func (o *NFSCreateRequest) SetPlanID(v types.ID) {
	o.PlanID = v
}

// GetIPAddress returns value of IPAddress
func (o *NFSCreateRequest) GetIPAddress() string {
	return o.IPAddress
}

// SetIPAddress sets value to IPAddress
func (o *NFSCreateRequest) SetIPAddress(v string) {
	o.IPAddress = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *NFSCreateRequest) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *NFSCreateRequest) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetDefaultRoute returns value of DefaultRoute
func (o *NFSCreateRequest) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *NFSCreateRequest) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// GetName returns value of Name
func (o *NFSCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *NFSCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *NFSCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *NFSCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *NFSCreateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *NFSCreateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *NFSCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *NFSCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// convertTo returns naked NFSCreateRequest
func (o *NFSCreateRequest) convertTo() (*naked.NFS, error) {
	dest := &naked.NFS{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked NFSCreateRequest
func (o *NFSCreateRequest) convertFrom(naked *naked.NFS) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* NFSUpdateRequest
*************************************************/

// NFSUpdateRequest represents API parameter/response structure
type NFSUpdateRequest struct {
	Name        string `validate:"required"`
	Description string `validate:"min=0,max=512"`
	Tags        []string
	IconID      types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *NFSUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetName returns value of Name
func (o *NFSUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *NFSUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *NFSUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *NFSUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *NFSUpdateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *NFSUpdateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *NFSUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *NFSUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// convertTo returns naked NFSUpdateRequest
func (o *NFSUpdateRequest) convertTo() (*naked.NFS, error) {
	dest := &naked.NFS{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked NFSUpdateRequest
func (o *NFSUpdateRequest) convertFrom(naked *naked.NFS) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* FreeDiskSizeActivity
*************************************************/

// FreeDiskSizeActivity represents API parameter/response structure
type FreeDiskSizeActivity struct {
	Values []naked.MonitorFreeDiskSizeValue `mapconv:"FreeDiskSize"`
}

// Validate validates by field tags
func (o *FreeDiskSizeActivity) Validate() error {
	return validator.New().Struct(o)
}

// GetValues returns value of Values
func (o *FreeDiskSizeActivity) GetValues() []naked.MonitorFreeDiskSizeValue {
	return o.Values
}

// convertTo returns naked FreeDiskSizeActivity
func (o *FreeDiskSizeActivity) convertTo() (*naked.MonitorValues, error) {
	dest := &naked.MonitorValues{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked FreeDiskSizeActivity
func (o *FreeDiskSizeActivity) convertFrom(naked *naked.MonitorValues) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* Note
*************************************************/

// Note represents API parameter/response structure
type Note struct {
	ID           types.ID
	Name         string `validate:"required"`
	Description  string `validate:"min=0,max=512"`
	Tags         []string
	Availability types.EAvailability
	Scope        types.EScope
	Class        string
	Content      string
	Icon         *naked.Icon `json:",omitempty"`
	CreatedAt    *time.Time
	ModifiedAt   *time.Time
}

// Validate validates by field tags
func (o *Note) Validate() error {
	return validator.New().Struct(o)
}

// GetID returns value of ID
func (o *Note) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *Note) SetID(v types.ID) {
	o.ID = v
}

// GetStringID gets value to StringID
func (o *Note) GetStringID() string {
	return getStringID(o)
}

// SetStringID sets value to StringID
func (o *Note) SetStringID(v string) {
	setStringID(o, v)
}

// GetInt64ID gets value to Int64ID
func (o *Note) GetInt64ID() int64 {
	return getInt64ID(o)
}

// SetInt64ID sets value to Int64ID
func (o *Note) SetInt64ID(v int64) {
	setInt64ID(o, v)
}

// GetName returns value of Name
func (o *Note) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Note) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *Note) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *Note) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *Note) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *Note) SetTags(v []string) {
	o.Tags = v
}

// GetAvailability returns value of Availability
func (o *Note) GetAvailability() types.EAvailability {
	return o.Availability
}

// SetAvailability sets value to Availability
func (o *Note) SetAvailability(v types.EAvailability) {
	o.Availability = v
}

// GetScope returns value of Scope
func (o *Note) GetScope() types.EScope {
	return o.Scope
}

// SetScope sets value to Scope
func (o *Note) SetScope(v types.EScope) {
	o.Scope = v
}

// GetClass returns value of Class
func (o *Note) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *Note) SetClass(v string) {
	o.Class = v
}

// GetContent returns value of Content
func (o *Note) GetContent() string {
	return o.Content
}

// SetContent sets value to Content
func (o *Note) SetContent(v string) {
	o.Content = v
}

// GetIcon returns value of Icon
func (o *Note) GetIcon() *naked.Icon {
	return o.Icon
}

// SetIcon sets value to Icon
func (o *Note) SetIcon(v *naked.Icon) {
	o.Icon = v
}

// GetCreatedAt returns value of CreatedAt
func (o *Note) GetCreatedAt() *time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *Note) SetCreatedAt(v *time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *Note) GetModifiedAt() *time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *Note) SetModifiedAt(v *time.Time) {
	o.ModifiedAt = v
}

// convertTo returns naked Note
func (o *Note) convertTo() (*naked.Note, error) {
	dest := &naked.Note{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked Note
func (o *Note) convertFrom(naked *naked.Note) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* NoteCreateRequest
*************************************************/

// NoteCreateRequest represents API parameter/response structure
type NoteCreateRequest struct {
	Name    string `validate:"required"`
	Tags    []string
	IconID  types.ID `mapconv:"Icon.ID"`
	Class   string
	Content string
}

// Validate validates by field tags
func (o *NoteCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetName returns value of Name
func (o *NoteCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *NoteCreateRequest) SetName(v string) {
	o.Name = v
}

// GetTags returns value of Tags
func (o *NoteCreateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *NoteCreateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *NoteCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *NoteCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// GetClass returns value of Class
func (o *NoteCreateRequest) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *NoteCreateRequest) SetClass(v string) {
	o.Class = v
}

// GetContent returns value of Content
func (o *NoteCreateRequest) GetContent() string {
	return o.Content
}

// SetContent sets value to Content
func (o *NoteCreateRequest) SetContent(v string) {
	o.Content = v
}

// convertTo returns naked NoteCreateRequest
func (o *NoteCreateRequest) convertTo() (*naked.Note, error) {
	dest := &naked.Note{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked NoteCreateRequest
func (o *NoteCreateRequest) convertFrom(naked *naked.Note) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* NoteUpdateRequest
*************************************************/

// NoteUpdateRequest represents API parameter/response structure
type NoteUpdateRequest struct {
	Name    string `validate:"required"`
	Tags    []string
	IconID  types.ID `mapconv:"Icon.ID"`
	Class   string
	Content string
}

// Validate validates by field tags
func (o *NoteUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetName returns value of Name
func (o *NoteUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *NoteUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetTags returns value of Tags
func (o *NoteUpdateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *NoteUpdateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *NoteUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *NoteUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// GetClass returns value of Class
func (o *NoteUpdateRequest) GetClass() string {
	return o.Class
}

// SetClass sets value to Class
func (o *NoteUpdateRequest) SetClass(v string) {
	o.Class = v
}

// GetContent returns value of Content
func (o *NoteUpdateRequest) GetContent() string {
	return o.Content
}

// SetContent sets value to Content
func (o *NoteUpdateRequest) SetContent(v string) {
	o.Content = v
}

// convertTo returns naked NoteUpdateRequest
func (o *NoteUpdateRequest) convertTo() (*naked.Note, error) {
	dest := &naked.Note{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked NoteUpdateRequest
func (o *NoteUpdateRequest) convertFrom(naked *naked.Note) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* Switch
*************************************************/

// Switch represents API parameter/response structure
type Switch struct {
	ID             types.ID
	Name           string `validate:"required"`
	Description    string `validate:"min=0,max=512"`
	Tags           []string
	Icon           *naked.Icon `json:",omitempty"`
	CreatedAt      *time.Time
	ModifiedAt     *time.Time
	Zone           *naked.Zone `json:",omitempty"`
	NetworkMaskLen int         `mapconv:"UserSubnet.NetworkMaskLen" validate:"min=1,max=32"`
	DefaultRoute   string      `mapconv:"UserSubnet.DefaultRoute" validate:"ipv4"`
}

// Validate validates by field tags
func (o *Switch) Validate() error {
	return validator.New().Struct(o)
}

// GetID returns value of ID
func (o *Switch) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *Switch) SetID(v types.ID) {
	o.ID = v
}

// GetStringID gets value to StringID
func (o *Switch) GetStringID() string {
	return getStringID(o)
}

// SetStringID sets value to StringID
func (o *Switch) SetStringID(v string) {
	setStringID(o, v)
}

// GetInt64ID gets value to Int64ID
func (o *Switch) GetInt64ID() int64 {
	return getInt64ID(o)
}

// SetInt64ID sets value to Int64ID
func (o *Switch) SetInt64ID(v int64) {
	setInt64ID(o, v)
}

// GetName returns value of Name
func (o *Switch) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Switch) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *Switch) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *Switch) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *Switch) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *Switch) SetTags(v []string) {
	o.Tags = v
}

// GetIcon returns value of Icon
func (o *Switch) GetIcon() *naked.Icon {
	return o.Icon
}

// SetIcon sets value to Icon
func (o *Switch) SetIcon(v *naked.Icon) {
	o.Icon = v
}

// GetCreatedAt returns value of CreatedAt
func (o *Switch) GetCreatedAt() *time.Time {
	return o.CreatedAt
}

// SetCreatedAt sets value to CreatedAt
func (o *Switch) SetCreatedAt(v *time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns value of ModifiedAt
func (o *Switch) GetModifiedAt() *time.Time {
	return o.ModifiedAt
}

// SetModifiedAt sets value to ModifiedAt
func (o *Switch) SetModifiedAt(v *time.Time) {
	o.ModifiedAt = v
}

// GetZone returns value of Zone
func (o *Switch) GetZone() *naked.Zone {
	return o.Zone
}

// SetZone sets value to Zone
func (o *Switch) SetZone(v *naked.Zone) {
	o.Zone = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *Switch) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *Switch) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetDefaultRoute returns value of DefaultRoute
func (o *Switch) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *Switch) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// convertTo returns naked Switch
func (o *Switch) convertTo() (*naked.Switch, error) {
	dest := &naked.Switch{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked Switch
func (o *Switch) convertFrom(naked *naked.Switch) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* SwitchCreateRequest
*************************************************/

// SwitchCreateRequest represents API parameter/response structure
type SwitchCreateRequest struct {
	Name           string `validate:"required"`
	NetworkMaskLen int    `mapconv:"UserSubnet.NetworkMaskLen" validate:"min=1,max=32"`
	DefaultRoute   string `mapconv:"UserSubnet.DefaultRoute" validate:"ipv4"`
	Description    string `validate:"min=0,max=512"`
	Tags           []string
	IconID         types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *SwitchCreateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetName returns value of Name
func (o *SwitchCreateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *SwitchCreateRequest) SetName(v string) {
	o.Name = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *SwitchCreateRequest) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *SwitchCreateRequest) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetDefaultRoute returns value of DefaultRoute
func (o *SwitchCreateRequest) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *SwitchCreateRequest) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// GetDescription returns value of Description
func (o *SwitchCreateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *SwitchCreateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *SwitchCreateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *SwitchCreateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *SwitchCreateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *SwitchCreateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// convertTo returns naked SwitchCreateRequest
func (o *SwitchCreateRequest) convertTo() (*naked.Switch, error) {
	dest := &naked.Switch{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked SwitchCreateRequest
func (o *SwitchCreateRequest) convertFrom(naked *naked.Switch) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* SwitchUpdateRequest
*************************************************/

// SwitchUpdateRequest represents API parameter/response structure
type SwitchUpdateRequest struct {
	Name           string `validate:"required"`
	NetworkMaskLen int    `mapconv:"UserSubnet.NetworkMaskLen" validate:"min=1,max=32"`
	DefaultRoute   string `mapconv:"UserSubnet.DefaultRoute" validate:"ipv4"`
	Description    string `validate:"min=0,max=512"`
	Tags           []string
	IconID         types.ID `mapconv:"Icon.ID"`
}

// Validate validates by field tags
func (o *SwitchUpdateRequest) Validate() error {
	return validator.New().Struct(o)
}

// GetName returns value of Name
func (o *SwitchUpdateRequest) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *SwitchUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetNetworkMaskLen returns value of NetworkMaskLen
func (o *SwitchUpdateRequest) GetNetworkMaskLen() int {
	return o.NetworkMaskLen
}

// SetNetworkMaskLen sets value to NetworkMaskLen
func (o *SwitchUpdateRequest) SetNetworkMaskLen(v int) {
	o.NetworkMaskLen = v
}

// GetDefaultRoute returns value of DefaultRoute
func (o *SwitchUpdateRequest) GetDefaultRoute() string {
	return o.DefaultRoute
}

// SetDefaultRoute sets value to DefaultRoute
func (o *SwitchUpdateRequest) SetDefaultRoute(v string) {
	o.DefaultRoute = v
}

// GetDescription returns value of Description
func (o *SwitchUpdateRequest) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *SwitchUpdateRequest) SetDescription(v string) {
	o.Description = v
}

// GetTags returns value of Tags
func (o *SwitchUpdateRequest) GetTags() []string {
	return o.Tags
}

// SetTags sets value to Tags
func (o *SwitchUpdateRequest) SetTags(v []string) {
	o.Tags = v
}

// GetIconID returns value of IconID
func (o *SwitchUpdateRequest) GetIconID() types.ID {
	return o.IconID
}

// SetIconID sets value to IconID
func (o *SwitchUpdateRequest) SetIconID(v types.ID) {
	o.IconID = v
}

// convertTo returns naked SwitchUpdateRequest
func (o *SwitchUpdateRequest) convertTo() (*naked.Switch, error) {
	dest := &naked.Switch{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked SwitchUpdateRequest
func (o *SwitchUpdateRequest) convertFrom(naked *naked.Switch) error {
	return mapconv.ConvertFrom(naked, o)
}

/*************************************************
* Zone
*************************************************/

// Zone represents API parameter/response structure
type Zone struct {
	ID           types.ID
	Name         string `validate:"required"`
	Description  string `validate:"min=0,max=512"`
	DisplayOrder int
	IsDummy      bool
	VNCProxy     *naked.VNCProxy  `json:",omitempty"`
	FTPServer    *naked.FTPServer `json:",omitempty"`
	Region       *naked.Region    `json:",omitempty"`
}

// Validate validates by field tags
func (o *Zone) Validate() error {
	return validator.New().Struct(o)
}

// GetID returns value of ID
func (o *Zone) GetID() types.ID {
	return o.ID
}

// SetID sets value to ID
func (o *Zone) SetID(v types.ID) {
	o.ID = v
}

// GetStringID gets value to StringID
func (o *Zone) GetStringID() string {
	return getStringID(o)
}

// SetStringID sets value to StringID
func (o *Zone) SetStringID(v string) {
	setStringID(o, v)
}

// GetInt64ID gets value to Int64ID
func (o *Zone) GetInt64ID() int64 {
	return getInt64ID(o)
}

// SetInt64ID sets value to Int64ID
func (o *Zone) SetInt64ID(v int64) {
	setInt64ID(o, v)
}

// GetName returns value of Name
func (o *Zone) GetName() string {
	return o.Name
}

// SetName sets value to Name
func (o *Zone) SetName(v string) {
	o.Name = v
}

// GetDescription returns value of Description
func (o *Zone) GetDescription() string {
	return o.Description
}

// SetDescription sets value to Description
func (o *Zone) SetDescription(v string) {
	o.Description = v
}

// GetDisplayOrder returns value of DisplayOrder
func (o *Zone) GetDisplayOrder() int {
	return o.DisplayOrder
}

// SetDisplayOrder sets value to DisplayOrder
func (o *Zone) SetDisplayOrder(v int) {
	o.DisplayOrder = v
}

// GetIsDummy returns value of IsDummy
func (o *Zone) GetIsDummy() bool {
	return o.IsDummy
}

// SetIsDummy sets value to IsDummy
func (o *Zone) SetIsDummy(v bool) {
	o.IsDummy = v
}

// GetVNCProxy returns value of VNCProxy
func (o *Zone) GetVNCProxy() *naked.VNCProxy {
	return o.VNCProxy
}

// SetVNCProxy sets value to VNCProxy
func (o *Zone) SetVNCProxy(v *naked.VNCProxy) {
	o.VNCProxy = v
}

// GetFTPServer returns value of FTPServer
func (o *Zone) GetFTPServer() *naked.FTPServer {
	return o.FTPServer
}

// SetFTPServer sets value to FTPServer
func (o *Zone) SetFTPServer(v *naked.FTPServer) {
	o.FTPServer = v
}

// GetRegion returns value of Region
func (o *Zone) GetRegion() *naked.Region {
	return o.Region
}

// SetRegion sets value to Region
func (o *Zone) SetRegion(v *naked.Region) {
	o.Region = v
}

// convertTo returns naked Zone
func (o *Zone) convertTo() (*naked.Zone, error) {
	dest := &naked.Zone{}
	err := mapconv.ConvertTo(o, dest)
	return dest, err
}

// convertFrom parse values from naked Zone
func (o *Zone) convertFrom(naked *naked.Zone) error {
	return mapconv.ConvertFrom(naked, o)
}
